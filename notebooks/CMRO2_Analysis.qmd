---
title: "NatalieCNN"
author: "Anna Zhu"
date: "10/04/2024"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(drc)
library(lubridate)
library(corrplot)
library(ggpubr)
library(ggplot2)
library(ggeffects)
library(dplyr)
library(plyr)
library(robustbase)
library(patchwork)
library(psych)
library(ggtext)
library(boot)
library(broom)
```

```{r, echo=FALSE, message=F, warning=F}
theme_minimalism <- function(){

theme_minimal() + # ggplotâ€²s minimal theme hides many unnecessary features of plot
theme( # make modifications to the theme
panel.grid.major.y=element_blank(), # hide major grid for y axis
panel.grid.minor.y=element_blank(), # hide minor grid for y axis
panel.grid.major.x=element_blank(), # hide major grid for x axis
panel.grid.minor.x=element_blank(), # hide minor grid for x axis
text=element_text(size=14), # font aesthetics
axis.text=element_text(size=12),
axis.title=element_text(size=14, face="bold"))

}
```


# Read Data

```{r, echo=FALSE, message=F, warning=F}
hctdata = read.csv("Hematocrit_Dec21.csv")
hctdata$Date <- yday(dmy(hctdata$Date))
#summary(hctdata)
```

```{r, echo=FALSE, message=F, warning=F}
rawvalues <- readxl::read_excel("CMRO2calc.xlsx")
rawvalues$Subject <- as.factor(rawvalues$Subject)
rawvalues$Sex <- as.factor(rawvalues$Sex)
rawvalues$DOB <- as.Date(rawvalues$DOB)
rawvalues$DOB <- format(rawvalues$DOB, format = "%d/%m/%Y")
rawvalues$`MRI Scan Date` <- as.Date(rawvalues$`MRI Scan Date`)
rawvalues$`MRI Scan Date` <- format(rawvalues$`MRI Scan Date`, format = "%d/%m/%Y")
```

```{r, echo=FALSE, message=F, warning=F}
rawvalues$PMA <- rawvalues$`CGA on Scan Day (Week)` + rawvalues$`CGA on Scan Day (Day)`/7
rawvalues$GA <- rawvalues$`GA at birth (week)` + rawvalues$`GA at Birth (day)`/7
```

# Hct Calculation

```{r, echo=FALSE, message=F, warning=F}
hctfunc <- function(x,dataframe=newdata) {
  arg_name0 <- deparse(substitute(x))
  arg_name0 <- formatC(x, width = 2, format = "d", flag = "0")
  arg_name <- paste("sub", arg_name0, sep="")
  subjectid <- paste("Sub-AMWCER",arg_name0,sep="")
  y <- paste("Patient", arg_name0, sep=" ")
  x2 <- hctdata %>% filter(ID==y)
  z <- rawvalues %>% filter(Subject == subjectid) %>% pull('MRI Scan Date')
  x2.mridate <- as.numeric(dmy(z) - dmy("01-01-2021"))
  x2.newdata <- data.frame(Date = c(x2.mridate))
  x2.model_W1.4 <- drm(Hct ~ Date, fct=W1.4(), data=x2)
  x2.predict <- predict(x2.model_W1.4, newdata = x2.newdata)
  plot(x2.model_W1.4, xlim=c(min(x2$Date),max(c(x2.newdata$Date,x2$Date))), ylim=c(min(x2$Hct, x2.predict),max(c(x2.predict,x2$Hct)))) + points(x2.newdata$Date,x2.predict, col = "red") + points(x2.newdata$Date,x2.predict, col = "red") + text(x2.newdata$Date,x2.predict,signif(x2.predict,4), cex=0.65, pos=3, col = "red")
  var_name <- paste(arg_name,".pred", sep="")
  x2.predict <- as.data.frame(x2.predict)
  dataframe[dataframe$Subject==subjectid, "Hct"] <- x2.predict
  newdata <<- dataframe
}

newdata <- rawvalues
newdata['Hct'] <- NA
x <- c(1:18,20)
for (val in x) {
  hctfunc(val)
}
```

```{r, echo=FALSE, message=F, warning=F}
pipelinevalues <- read.csv("pipeline_output_v1.csv")
pipelinevalues <- pipelinevalues %>% dplyr::rename(Subject = Subject_ID)
pipelinevalues <- pipelinevalues %>% dplyr::select(!c(GA, PMA))

newdata$Subject <- gsub('Sub-', '', newdata$Subject)
alldata <- merge(newdata,pipelinevalues,by="Subject")
```

```{r, echo=FALSE, message=F, warning=F}
#New column with sum of total days invasive and total days noninvasive
alldata$Total_INNI <- alldata$Invasive + alldata$Noninvasive
#New column with sum of total days invasive, total days noninvasive, and total days less invasive
alldata$Total_vent <- alldata$Invasive + alldata$Noninvasive + alldata$Less_Invasive
#New column with sum of total days noninvaisve, and total days less invasive
alldata$Total_NILI <- alldata$Noninvasive + alldata$Less_Invasive
#New column for CSaO2 * 100
alldata$CSaO2_P <- alldata$CSaO2 * 100
#New column for Hct * 100
alldata$Hct_P <- alldata$Hct * 100
#New column with percent of days on invasive
alldata$IN_P <- alldata$Invasive / (alldata$Invasive + alldata$Less_Invasive + alldata$Noninvasive)
#New column with percent of days on noninvasive
alldata$LI_P <- alldata$Noninvasive / (alldata$Invasive + alldata$Less_Invasive + alldata$Noninvasive)
#New column with percent of days on less invasive
alldata$NI_P <- alldata$Less_Invasive / (alldata$Invasive + alldata$Less_Invasive + alldata$Noninvasive)
#New column with proportion of days on ventilation
alldata$Vent_P <- (alldata$Invasive + alldata$Noninvasive + alldata$Less_Invasive) / alldata$NICU
#New column with days on room air
alldata$roomair <- alldata$NICU - (alldata$Invasive + alldata$Noninvasive + alldata$Less_Invasive)
```

```{r, echo=FALSE, message=F, warning=F}
chiox = -0.03*4*pi
chido = 0.21*4*pi
alldata$Hbt <- alldata$Hct/(3*0.0165)
alldata$chi_veiniminuscsf <- alldata$Avg_Chi_Vein_Segmen_p1thr - alldata$CSF_Chi
alldata$CSvO2 <- 1 - (alldata$chi_veiniminuscsf - (chiox*alldata$Hct))/(chido*alldata$Hct)
alldata$OEF <- (alldata$CSaO2 - alldata$CSvO2)/alldata$CSaO2
alldata$GM_CMRO2 <- alldata$GM_CBF*alldata$OEF*alldata$Hbt
alldata$WM_CMRO2 <- alldata$WM_CBF*alldata$OEF*alldata$Hbt
alldata$Cerebellum_CMRO2 <- alldata$Cerebellum_CBF*alldata$OEF*alldata$Hbt
alldata$Deep_GM_CMRO2 <- alldata$Deep_GM_CBF*alldata$OEF*alldata$Hbt
alldata$Brain_Stem_CMRO2 <- alldata$Brain_Stem_CBF*alldata$OEF*alldata$Hbt
alldata$Hip_and_Amyg_CMRO2 <- alldata$Hip_and_Amyg_CBF*alldata$OEF*alldata$Hbt
```

```{r, echo=FALSE, message=F, warning=F}
#New column for CSvO2 * 100
alldata$CSvO2_P <- alldata$CSvO2 * 100
#New column for OEF * 100
alldata$OEF_P <- alldata$OEF * 100
alldata[is.na(alldata)] = 0
```

# Initial Stats

```{r, echo=FALSE, message=F, warning=F}
knitr::kable(allstats <- describe(alldata))
```

```{r, echo=FALSE, message=F, warning=F}
knitr::kable(alldata %>% dplyr::select(GM_CBF, WM_CBF, Deep_GM_CBF, Brain_Stem_CBF, Cerebellum_CBF, Hip_and_Amyg_CBF, GM_CMRO2, WM_CMRO2, Deep_GM_CMRO2, Brain_Stem_CMRO2, Cerebellum_CMRO2, Hip_and_Amyg_CMRO2) %>% describe() %>% dplyr::select(mean,sd))
```
```{r, echo=FALSE, message=F, warning=F}
medianvalues <- alldata %>% dplyr::select(GA,PMA,Invasive,Noninvasive,Less_Invasive,NICU,roomair, BW, `Weight on Scan Day (kg)`, `Head Cir. on Scan Day (cm)`, Sedatives, Narcotic_Infusion, Total_vent) %>% describe(quant=c(.25,.5,.75), IQR = T) %>% dplyr::select(Q0.25, Q0.5, Q0.75,IQR)
```

# Initial Data Vis

```{r, echo=FALSE, message=F, warning=F}
#| label: dayscat
#| fig-width: 7
#| fig-height: 7
Hist_GA <- ggplot(alldata, aes(x=GA)) + 
 geom_histogram(colour="black", fill="white") + theme_minimalism() + ggtitle("Gestational Age at Birth") + xlab("GA (Weeks)") + ylim(0,5)

Hist_PMA <- ggplot(alldata, aes(x=PMA)) + 
 geom_histogram(colour="black", fill="white") + theme_minimalism() + ggtitle("Age at Scan") + xlab("PMA (Weeks)") + ylab("") + ylim(0,5)

plot_daysCat1 <- ggplot(alldata, aes(x=Invasive)) +
 geom_histogram(colour="black", fill="white", bins=50) + theme_minimalism() + ggtitle("Category 1") + xlim(0,60) + ylim(0,6) + xlab("")

plot_daysCat2 <- ggplot(alldata, aes(x=Noninvasive)) +
 geom_histogram(colour="black", fill="white") + theme_minimalism() + ggtitle("Category 2")+ xlim(0,60)+ ylim(0,6) +xlab("Days") + ylab("")

plot_daysCat3 <- ggplot(alldata, aes(x=Less_Invasive)) +
 geom_histogram(colour="black", fill="white") + theme_minimalism() + ggtitle("Category 3")+ xlim(0,60)+ ylim(0,6) +xlab("") + ylab("")

(GAHist_patch <- (Hist_GA | Hist_PMA) / (plot_daysCat1 | plot_daysCat2 | plot_daysCat3) + plot_layout(heights = c(1,1)))
```
```{r}
png(file="GAHist.png", width=7, height=7, units="in", res=300)
print(GAHist_patch)
dev.off()
```



# GA ~ Invasive

If you are born younger, are you more likely to be on more days of invasive ventilatory support?

```{r, echo=FALSE, message=F, warning=F}
GA_Invasive.lm <- lm(Invasive ~ GA , data=alldata)
(GA_Invasive.lm.summary <- summary(GA_Invasive.lm))
```

```{r, echo=FALSE, message=F, warning=F}
GA_Invasive.predict <- ggpredict(GA_Invasive.lm, terms=c("GA"), ci.lvl=0.95)
```

```{r, echo=FALSE, message=F, warning=F}
GA_NonInvasive.lm <- lm(Noninvasive ~ GA , data=alldata)
(GA_NonInvasive.lm.summary <- summary(GA_NonInvasive.lm))
```

```{r, echo=FALSE, message=F, warning=F}
GA_NonInvasive.predict <- ggpredict(GA_NonInvasive.lm, terms=c("GA"), ci.lvl=0.95)
```

```{r, echo=FALSE, message=F, warning=F}
GA_Less_Invasive.lm <- lm(Less_Invasive ~ GA , data=alldata)
(GA_Less_Invasive.lm.summary <- summary(GA_Less_Invasive.lm))
```

```{r, echo=FALSE, message=F, warning=F}
GA_Less_Invasive.predict <- ggpredict(GA_Less_Invasive.lm, terms=c("GA"), ci.lvl=0.95)
```

```{r, echo=FALSE, message=F, warning=F}
Cat1_v_GAplot <- ggplot() + geom_point(data = alldata, aes(x = GA, y = Invasive))  +
  geom_smooth(data=alldata, aes(x = GA, y = Invasive), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=GA_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high),  alpha=0.15) +
  geom_line(data=GA_Invasive.predict, aes(x=x, y=conf.high),  linetype="dashed")+
  geom_line(data=GA_Invasive.predict, aes(x=x, y=conf.low),  linetype="dashed")+
  geom_line(data=GA_Invasive.predict, aes(x,predicted))+
  annotate(geom="text", x=29.5, y=25, label=paste("Adj R Sq = ", round(GA_Invasive.lm.summary$adj.r.squared,2), "\np = ", round(GA_Invasive.lm.summary$coefficients[2,4],2))) +
  ylab("Days on Category 1") + ylim(-7,33) + xlab("GA (Weeks)") +
theme_minimalism()

Cat2_v_GAplot <- ggplot() + geom_point(data = alldata, aes(x = GA, y = Noninvasive))  +
  geom_smooth(data=alldata, aes(x = GA, y = Noninvasive), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=GA_NonInvasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high),  alpha=0.15) +
  geom_line(data=GA_NonInvasive.predict, aes(x=x, y=conf.high),  linetype="dashed")+
  geom_line(data=GA_NonInvasive.predict, aes(x=x, y=conf.low),  linetype="dashed")+
  geom_line(data=GA_NonInvasive.predict, aes(x,predicted))+
  annotate(geom="text", x=29.5, y=53, label=paste("Adj R Sq = ", round(GA_NonInvasive.lm.summary$adj.r.squared,2), "\np = ", round(GA_NonInvasive.lm.summary$coefficients[2,4],2))) +
  ylab("Days on Category 2") +ylim(-7,63) + xlab("GA (Weeks)") +
theme_minimalism()

Cat3_v_GAplot <- ggplot() + geom_point(data = alldata, aes(x = GA, y = Less_Invasive))  +
  geom_smooth(data=alldata, aes(x = GA, y = Less_Invasive), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=GA_Less_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high),  alpha=0.15) +
  geom_line(data=GA_Less_Invasive.predict, aes(x=x, y=conf.high),  linetype="dashed")+
  geom_line(data=GA_Less_Invasive.predict, aes(x=x, y=conf.low),  linetype="dashed")+
  geom_line(data=GA_Less_Invasive.predict, aes(x,predicted))+
  annotate(geom="text", x=29.5, y=35, label=paste("Adj R Sq = ", round(GA_Less_Invasive.lm.summary$adj.r.squared,2), "\np = ", round(GA_Less_Invasive.lm.summary$coefficients[2,4],2))) +
  ylab("Days on Category 3") +ylim(-7,37) + xlab("GA (Weeks)") +
theme_minimalism()

```
```{r}
#| label: linreg
#| fig-width: 7
#| fig-height: 7
design <- "AABB
           #CC#"
(Cat_v_GA_patch <- Cat1_v_GAplot + Cat2_v_GAplot + Cat3_v_GAplot +
  plot_layout(design = design))
```
```{r}
png(file="Categories_vs_GA.png", width=7, height=7, units="in", res=300)
dev.off()
```


# Tissue Volume ~ PMA

```{r, echo=FALSE, message=F, warning=F}
# Select columns ending with "_Volume"
volume_cols <- grep("_Volume$", colnames(alldata), perl=TRUE)

# Divide values by 1000 using lapply
alldata[, volume_cols] <- lapply(alldata[, volume_cols], function(x) x / 1000)
```

```{r, echo=FALSE, message=F, warning=F}
Volume.lm <- lm(GM_Volume ~ GA + PMA, data=alldata)
Volume.lm.summary <- summary(Volume.lm)
Volume.predict <- ggpredict(Volume.lm, terms=c("PMA"), ci.lvl=0.95)
pvalue <- ifelse(round(Volume.lm.summary$coefficients[3,4], 4) < 0.01, "p < 0.01", paste("p = ", round(Volume.lm.summary$coefficients[3,4],2)))
GMVolume_PMA <- ggplot() + geom_point(data = alldata, aes(x = PMA, y = GM_Volume))  +
  geom_smooth(data=alldata, aes(x = PMA, y = GM_Volume), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=Volume.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=Volume.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=Volume.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=Volume.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=38.8, y=180, label=paste("Adj R Sq = ", round(Volume.lm.summary$adj.r.squared,2), "\n", pvalue))+
  ylab("GM Volume (mL)") + xlab("") +
theme_minimalism()

Volume.lm <- lm(WM_Volume ~ GA + PMA, data=alldata)
Volume.lm.summary <- summary(Volume.lm)
Volume.predict <- ggpredict(Volume.lm, terms=c("PMA"), ci.lvl=0.95)
pvalue <- ifelse(round(Volume.lm.summary$coefficients[3,4], 4) < 0.01, "p < 0.01", paste("p = ", round(Volume.lm.summary$coefficients[3,4],2)))
WMVolume_PMA <- ggplot() + geom_point(data = alldata, aes(x = PMA, y = WM_Volume))  +
  geom_smooth(data=alldata, aes(x = PMA, y = WM_Volume), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=Volume.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=Volume.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=Volume.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=Volume.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=38.8, y=180, label=paste("Adj R Sq = ", round(Volume.lm.summary$adj.r.squared,2), "\n", pvalue))+
  ylab("WM Volume (mL)") + xlab("") +
theme_minimalism()


Volume.lm <- lm(Cerebellum_Volume ~ GA + PMA, data=alldata)
Volume.lm.summary <- summary(Volume.lm)
Volume.predict <- ggpredict(Volume.lm, terms=c("PMA"), ci.lvl=0.95)
pvalue <- ifelse(round(Volume.lm.summary$coefficients[3,4], 4) < 0.01, "p < 0.01", paste("p = ", round(Volume.lm.summary$coefficients[3,4],2)))
CerebellumVolume_PMA <- ggplot() + geom_point(data = alldata, aes(x = PMA, y = Cerebellum_Volume))  +
  geom_smooth(data=alldata, aes(x = PMA, y = Cerebellum_Volume), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=Volume.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=Volume.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=Volume.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=Volume.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=38.8, y=35, label=paste("Adj R Sq = ", round(Volume.lm.summary$adj.r.squared,2), "\n", pvalue))+
  ylab("Cerebellum Volume (mL)") + xlab("") +
theme_minimalism()

Volume.lm <- lm(Deep_GM_Volume ~ GA + PMA, data=alldata)
Volume.lm.summary <- summary(Volume.lm)
Volume.predict <- ggpredict(Volume.lm, terms=c("PMA"), ci.lvl=0.95)

pvalue <- ifelse(round(Volume.lm.summary$coefficients[3,4], 4) < 0.01, "p < 0.01", paste("p = ", round(Volume.lm.summary$coefficients[3,4],2)))
DeepGMVolume_PMA <- ggplot() + geom_point(data = alldata, aes(x = PMA, y = Deep_GM_Volume))  +
  geom_smooth(data=alldata, aes(x = PMA, y = Deep_GM_Volume), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=Volume.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=Volume.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=Volume.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=Volume.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=38.8, y=32, label=paste("Adj R Sq = ", round(Volume.lm.summary$adj.r.squared,2), "\n", pvalue))+
  ylab("Deep GM Volume (mL)") + xlab("") +
theme_minimalism()

Volume.lm <- lm(Brain_Stem_Volume ~ GA + PMA, data=alldata)
Volume.lm.summary <- summary(Volume.lm)
Volume.predict <- ggpredict(Volume.lm, terms=c("PMA"), ci.lvl=0.95)

pvalue <- ifelse(round(Volume.lm.summary$coefficients[3,4], 4) < 0.01, "p < 0.01", paste("p = ", round(Volume.lm.summary$coefficients[3,4],2)))
BrainstemVolume_PMA <- ggplot() + geom_point(data = alldata, aes(x = PMA, y = Brain_Stem_Volume))  +
  geom_smooth(data=alldata, aes(x = PMA, y = Brain_Stem_Volume), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=Volume.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=Volume.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=Volume.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=Volume.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=38.8, y=7, label=paste("Adj R Sq = ", round(Volume.lm.summary$adj.r.squared,2), "\n", pvalue))+
  ylab("Brainstem Volume (mL)") + xlab("Age at Scan (Weeks)") +
theme_minimalism()

Volume.lm <- lm(Hip_and_Amyg_Volume ~ GA + PMA, data=alldata)
Volume.lm.summary <- summary(Volume.lm)
Volume.predict <- ggpredict(Volume.lm, terms=c("PMA"), ci.lvl=0.95)

pvalue <- ifelse(round(Volume.lm.summary$coefficients[3,4], 4) < 0.01, "p < 0.01", paste("p = ", round(Volume.lm.summary$coefficients[3,4],2)))
HipAmygVolume_PMA <- ggplot() + geom_point(data = alldata, aes(x = PMA, y = Hip_and_Amyg_Volume))  +
  geom_smooth(data=alldata, aes(x = PMA, y = Hip_and_Amyg_Volume), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=Volume.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=Volume.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=Volume.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=Volume.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=38.8, y=3, label=paste("Adj R Sq = ", round(Volume.lm.summary$adj.r.squared,2), "\n", pvalue))+
  ylab("Hip and Amyg Volume (mL)") + xlab("") +
theme_minimalism()

(Vol_v_PMA_patch <- GMVolume_PMA + WMVolume_PMA + DeepGMVolume_PMA + CerebellumVolume_PMA + BrainstemVolume_PMA + HipAmygVolume_PMA)
```

# CBF ~ Invasive

```{r, echo=FALSE, message=F, warning=F}
GMCBF_Invasive.lm <- lm(GM_CBF ~ GA + PMA + Invasive, data=alldata)
CBF_Invasive.lm.summary <- summary(GMCBF_Invasive.lm)
GMCBF_Invasive.lm.summary = CBF_Invasive.lm.summary
CBF_Invasive.predict <- ggpredict(GMCBF_Invasive.lm, terms=c("Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Invasive.lm.summary$coefficients[4,4],2)))
GMCBF_Inv_plot <-ggplot() + geom_point(data = alldata, aes(x = Invasive, y = GM_CBF))  +
  geom_smooth(data=alldata, aes(x = Invasive, y = GM_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "GM CBF (ml/100g/min)", x = "")+
  annotate(geom="text", x=5, y=24, label=paste("Adj R Sq = ", round(CBF_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

WMCBF_Invasive.lm <- lm(WM_CBF ~ GA + PMA + Invasive, data=alldata)
CBF_Invasive.lm.summary <- summary(WMCBF_Invasive.lm)
WMCBF_Invasive.lm.summary = CBF_Invasive.lm.summary
CBF_Invasive.predict <- ggpredict(WMCBF_Invasive.lm, terms=c("Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Invasive.lm.summary$coefficients[4,4],2)))
WMCBF_Inv_plot <- ggplot() + geom_point(data = alldata, aes(x = Invasive, y = WM_CBF))  +
  geom_smooth(data=alldata, aes(x = Invasive, y = WM_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "WM CBF (ml/100g/min)", x = "")+
  annotate(geom="text", x=5, y=18, label=paste("Adj R Sq = ", round(CBF_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

DeepGMCBF_Invasive.lm <- lm(Deep_GM_CBF ~ GA + PMA + Invasive, data=alldata)
CBF_Invasive.lm.summary <- summary(DeepGMCBF_Invasive.lm)
DeepGMCBF_Invasive.lm.summary = CBF_Invasive.lm.summary
CBF_Invasive.predict <- ggpredict(DeepGMCBF_Invasive.lm, terms=c("Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Invasive.lm.summary$coefficients[4,4],2)))
DeepGMCBF_Inv_plot <-ggplot() + geom_point(data = alldata, aes(x = Invasive, y = Deep_GM_CBF))  +
  geom_smooth(data=alldata, aes(x = Invasive, y = Deep_GM_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "Deep GM CBF (ml/100g/min)", x = "")+
  annotate(geom="text", x=6, y=30, label=paste("Adj R Sq = ", round(CBF_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CerebellumCBF_Invasive.lm <- lm(Cerebellum_CBF ~ GA + PMA + Invasive, data=alldata)
CBF_Invasive.lm.summary <- summary(CerebellumCBF_Invasive.lm)
CerebellumCBF_Invasive.lm.summary = CBF_Invasive.lm.summary
CBF_Invasive.predict <- ggpredict(CerebellumCBF_Invasive.lm, terms=c("Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Invasive.lm.summary$coefficients[4,4],2)))
CerebellumCBF_Invasive_plot <- ggplot() + geom_point(data = alldata, aes(x = Invasive, y = Cerebellum_CBF))  +
  geom_smooth(data=alldata, aes(x = Invasive, y = Cerebellum_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "Cerebellum CBF (ml/100g/min)", x = "")+
  annotate(geom="text", x=5, y=40, label=paste("Adj R Sq = ", round(CBF_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

BrainstemCBF_Invasive.lm <- lm(Brain_Stem_CBF ~ GA + PMA + Invasive, data=alldata)
CBF_Invasive.lm.summary <- summary(BrainstemCBF_Invasive.lm)
BrainstemCBF_Invasive.lm.summary = CBF_Invasive.lm.summary
CBF_Invasive.predict <- ggpredict(BrainstemCBF_Invasive.lm, terms=c("Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Invasive.lm.summary$coefficients[4,4],2)))
BrainstemCBF_Invasive_plot <- ggplot() + geom_point(data = alldata, aes(x = Invasive, y = Brain_Stem_CBF))  +
  geom_smooth(data=alldata, aes(x = Invasive, y = Brain_Stem_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "Brainstem CBF (ml/100g/min)", x = "Category 1 (Days)")+
  annotate(geom="text", x=5, y=52, label=paste("Adj R Sq = ", round(CBF_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

HipandamygCBF_Invasive.lm <- lm(Hip_and_Amyg_CBF ~ GA + PMA + Invasive, data=alldata)
CBF_Invasive.lm.summary <- summary(HipandamygCBF_Invasive.lm)
HipandamygCBF_Invasive.lm.summary = CBF_Invasive.lm.summary
CBF_Invasive.predict <- ggpredict(HipandamygCBF_Invasive.lm, terms=c("Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Invasive.lm.summary$coefficients[4,4],2)))
HipandAmygCBF_Invasive_plot <- ggplot() + geom_point(data = alldata, aes(x = Invasive, y = Hip_and_Amyg_CBF))  +
  geom_smooth(data=alldata, aes(x = Invasive, y = Hip_and_Amyg_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "Hip and Amyg CBF (ml/100g/min)", x = "")+
  annotate(geom="text", x=5, y=34, label=paste("Adj R Sq = ", round(CBF_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

(CBF_v_Invasive_patch <- GMCBF_Inv_plot + WMCBF_Inv_plot + DeepGMCBF_Inv_plot + CerebellumCBF_Invasive_plot + BrainstemCBF_Invasive_plot + HipandAmygCBF_Invasive_plot)
```

# CBF ~ Noninvasive

```{r, echo=FALSE, message=F, warning=F}
GMCBF_Noninvasive.lm <- lm(GM_CBF ~ PMA + GA + Noninvasive, data=alldata)
CBF_Noninvasive.lm.summary <- summary(GMCBF_Noninvasive.lm)
GMCBF_Noninvasive.lm.summary = CBF_Noninvasive.lm.summary
CBF_Noninvasive.predict <- ggpredict(GMCBF_Noninvasive.lm, terms=c("Noninvasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Noninvasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Noninvasive.lm.summary$coefficients[4,4],2)))
GMCBF_Noninvasive_plot <- ggplot() + geom_point(data = alldata, aes(x = Noninvasive, y = GM_CBF))  +
  geom_smooth(data=alldata, aes(x = Noninvasive, y = GM_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Noninvasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Noninvasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Noninvasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Noninvasive.predict, aes(x,predicted), color="blue")+
  labs(y= "GM CBF\n (ml/100g/min)", x = "")+
  annotate(geom="text", x=15, y=25, label=paste("Adj R Sq = ", round(CBF_Noninvasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

WMCBF_Noninvasive.lm <- lm(WM_CBF ~ PMA + GA + Noninvasive, data=alldata)
CBF_Noninvasive.lm.summary <- summary(WMCBF_Noninvasive.lm)
WMCBF_Noninvasive.lm.summary = CBF_Noninvasive.lm.summary
CBF_Noninvasive.predict <- ggpredict(WMCBF_Noninvasive.lm, terms=c("Noninvasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Noninvasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Noninvasive.lm.summary$coefficients[4,4],2)))
WMCBF_Noninvasive_plot <- ggplot() + geom_point(data = alldata, aes(x = Noninvasive, y = WM_CBF))  +
  geom_smooth(data=alldata, aes(x = Noninvasive, y = WM_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Noninvasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Noninvasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Noninvasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Noninvasive.predict, aes(x,predicted), color="blue")+
  labs(y= "WM CBF\n (ml/100g/min)", x = "")+
  annotate(geom="text", x=15, y=18, label=paste("Adj R Sq = ", round(CBF_Noninvasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

DeepGMCBF_Noninvasive.lm <- lm(Deep_GM_CBF ~ PMA + GA + Noninvasive, data=alldata)
CBF_Noninvasive.lm.summary <- summary(DeepGMCBF_Noninvasive.lm)
DeepGMCBF_Noninvasive.lm.summary = CBF_Noninvasive.lm.summary
CBF_Noninvasive.predict <- ggpredict(DeepGMCBF_Noninvasive.lm, terms=c("Noninvasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Noninvasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Noninvasive.lm.summary$coefficients[4,4],2)))
DeepGMCBF_Noninvasive_plot <- ggplot() + geom_point(data = alldata, aes(x = Noninvasive, y = Deep_GM_CBF))  +
  geom_smooth(data=alldata, aes(x = Noninvasive, y = Deep_GM_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Noninvasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Noninvasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Noninvasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Noninvasive.predict, aes(x,predicted), color="blue")+
  labs(y= "Deep GM CBF\n (ml/100g/min)", x = "")+
  annotate(geom="text", x=15, y=34, label=paste("Adj R Sq = ", round(CBF_Noninvasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CerebellumCBF_Noninvasive.lm <- lm(Cerebellum_CBF ~ PMA + GA + Noninvasive, data=alldata)
CBF_Noninvasive.lm.summary <- summary(CerebellumCBF_Noninvasive.lm)
CerebellumCBF_Noninvasive.lm.summary = CBF_Noninvasive.lm.summary
CBF_Noninvasive.predict <- ggpredict(CerebellumCBF_Noninvasive.lm, terms=c("Noninvasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Noninvasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Noninvasive.lm.summary$coefficients[4,4],2)))
CerebellumCBF_Noninvasive_plot <- ggplot() + geom_point(data = alldata, aes(x = Noninvasive, y = Cerebellum_CBF))  +
  geom_smooth(data=alldata, aes(x = Noninvasive, y = Cerebellum_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Noninvasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Noninvasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Noninvasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Noninvasive.predict, aes(x,predicted), color="blue")+
  labs(y= "Cerebellum CBF\n (ml/100g/min)", x = "")+
  annotate(geom="text", x=15, y=42, label=paste("Adj R Sq = ", round(CBF_Noninvasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

BrainstemCBF_Noninvasive.lm <- lm(Brain_Stem_CBF ~ PMA + GA + Noninvasive, data=alldata)
CBF_Noninvasive.lm.summary <- summary(BrainstemCBF_Noninvasive.lm)
BrainstemCBF_Noninvasive.lm.summary = CBF_Noninvasive.lm.summary
CBF_Noninvasive.predict <- ggpredict(BrainstemCBF_Noninvasive.lm, terms=c("Noninvasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Noninvasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Noninvasive.lm.summary$coefficients[4,4],2)))
BrainstemCBF_Noninvasive_plot <- ggplot() + geom_point(data = alldata, aes(x = Noninvasive, y = Brain_Stem_CBF))  +
  geom_smooth(data=alldata, aes(x = Noninvasive, y = Brain_Stem_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Noninvasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Noninvasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Noninvasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Noninvasive.predict, aes(x,predicted), color="blue")+
  labs(y= "Brainstem CBF\n (ml/100g/min)", x = "Category 2 (Days)")+
  annotate(geom="text", x=15, y=55, label=paste("Adj R Sq = ", round(CBF_Noninvasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

HipandamygCBF_Noninvasive.lm <- lm(Hip_and_Amyg_CBF ~ PMA + GA + Noninvasive, data=alldata)
CBF_Noninvasive.lm.summary <- summary(HipandamygCBF_Noninvasive.lm)
HipandamygCBF_Noninvasive.lm.summary = CBF_Noninvasive.lm.summary
CBF_Noninvasive.predict <- ggpredict(HipandamygCBF_Noninvasive.lm, terms=c("Noninvasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Noninvasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Noninvasive.lm.summary$coefficients[4,4],2)))
HipandAmygCBF_Noninvasive_plot <- ggplot() + geom_point(data = alldata, aes(x = Noninvasive, y = Hip_and_Amyg_CBF))  +
  geom_smooth(data=alldata, aes(x = Noninvasive, y = Hip_and_Amyg_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Noninvasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Noninvasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Noninvasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Noninvasive.predict, aes(x,predicted), color="blue")+
  labs(y= "Hip and Amyg CBF\n (ml/100g/min)", x = "")+
  annotate(geom="text", x=15, y=38, label=paste("Adj R Sq = ", round(CBF_Noninvasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

(CBF_v_NonInvasive_patch <- GMCBF_Noninvasive_plot + WMCBF_Noninvasive_plot + DeepGMCBF_Noninvasive_plot + CerebellumCBF_Noninvasive_plot + BrainstemCBF_Noninvasive_plot + HipandAmygCBF_Noninvasive_plot)
```

# CBF ~ Less Invasive

```{r, echo=FALSE, message=F, warning=F}
GMCBF_Less_Invasive.lm <- lm(GM_CBF ~ PMA + GA + Less_Invasive, data=alldata)
CBF_Less_Invasive.lm.summary <- summary(GMCBF_Less_Invasive.lm)
GMCBF_Less_Invasive.lm.summary = CBF_Less_Invasive.lm.summary
CBF_Less_Invasive.predict <- ggpredict(GMCBF_Less_Invasive.lm, terms=c("Less_Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Less_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Less_Invasive.lm.summary$coefficients[4,4],2)))
GMCBF_Lessinvasive_plot <- ggplot() + geom_point(data = alldata, aes(x = Less_Invasive, y = GM_CBF))  +
  geom_smooth(data=alldata, aes(x = Less_Invasive, y = GM_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Less_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Less_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Less_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Less_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "GM CBF (ml/100g/min)", x = "")+ylim(4,24)+
  annotate(geom="text", x=5, y=23, label=paste("Adj R Sq = ", round(CBF_Less_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

WMCBF_Less_Invasive.lm <- lm(WM_CBF ~ PMA + GA + Less_Invasive, data=alldata)
CBF_Less_Invasive.lm.summary <- summary(WMCBF_Less_Invasive.lm)
WMCBF_Less_Invasive.lm.summary = CBF_Less_Invasive.lm.summary
CBF_Less_Invasive.predict <- ggpredict(WMCBF_Less_Invasive.lm, terms=c("Less_Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Less_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Less_Invasive.lm.summary$coefficients[4,4],2)))
WMCBF_Lessinvasive_plot <- ggplot() + geom_point(data = alldata, aes(x = Less_Invasive, y = WM_CBF))  +
  geom_smooth(data=alldata, aes(x = Less_Invasive, y = WM_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Less_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Less_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Less_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Less_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "WM CBF (ml/100g/min)", x = "")+ ylim(5,20)+
  annotate(geom="text", x=5, y=18, label=paste("Adj R Sq = ", round(CBF_Less_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

DeepGMCBF_Less_Invasive.lm <- lm(Deep_GM_CBF ~ PMA + GA + Less_Invasive, data=alldata)
CBF_Less_Invasive.lm.summary <- summary(DeepGMCBF_Less_Invasive.lm)
DeepGMCBF_Less_Invasive.lm.summary = CBF_Less_Invasive.lm.summary
CBF_Less_Invasive.predict <- ggpredict(DeepGMCBF_Less_Invasive.lm, terms=c("Less_Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Less_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Less_Invasive.lm.summary$coefficients[4,4],2)))
DeepGMCBF_Lessinvasive_plot <- ggplot() + geom_point(data = alldata, aes(x = Less_Invasive, y = Deep_GM_CBF))  +
  geom_smooth(data=alldata, aes(x = Less_Invasive, y = Deep_GM_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Less_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Less_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Less_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Less_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "Deep GM CBF (ml/100g/min)", x = "")+
  annotate(geom="text", x=15, y=30, label=paste("Adj R Sq = ", round(CBF_Less_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CerebellumCBF_Less_Invasive.lm <- lm(Cerebellum_CBF ~ PMA + GA + Less_Invasive, data=alldata)
CBF_Less_Invasive.lm.summary <- summary(CerebellumCBF_Less_Invasive.lm)
CerebellumCBF_Less_Invasive.lm.summary = CBF_Less_Invasive.lm.summary
CBF_Less_Invasive.predict <- ggpredict(CerebellumCBF_Less_Invasive.lm, terms=c("Less_Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Less_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Less_Invasive.lm.summary$coefficients[4,4],2)))
CerebellumCBF_Lessinvasive_plot <- ggplot() + geom_point(data = alldata, aes(x = Less_Invasive, y = Cerebellum_CBF))  +
  geom_smooth(data=alldata, aes(x = Less_Invasive, y = Cerebellum_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Less_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Less_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Less_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Less_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "Cerebellum CBF (ml/100g/min)", x = "")+ylim(7,36)+
  annotate(geom="text", x=15, y=35, label=paste("Adj R Sq = ", round(CBF_Less_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

BrainstemCBF_Less_Invasive.lm <- lm(Brain_Stem_CBF ~ PMA + GA + Less_Invasive, data=alldata)
CBF_Less_Invasive.lm.summary <- summary(BrainstemCBF_Less_Invasive.lm)
BrainstemCBF_Less_Invasive.lm.summary = CBF_Less_Invasive.lm.summary
CBF_Less_Invasive.predict <- ggpredict(BrainstemCBF_Less_Invasive.lm, terms=c("Less_Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Less_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Less_Invasive.lm.summary$coefficients[4,4],2)))
BrainstemCBF_Lessinvasive_plot <- ggplot() + geom_point(data = alldata, aes(x = Less_Invasive, y = Brain_Stem_CBF))  +
  geom_smooth(data=alldata, aes(x = Less_Invasive, y = Brain_Stem_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Less_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Less_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Less_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Less_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "Brainstem CBF (ml/100g/min)", x = "Category 3 (Days)")+ ylim(7,52)+
  annotate(geom="text", x=5, y=50, label=paste("Adj R Sq = ", round(CBF_Less_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

HipandamygCBF_Less_Invasive.lm <- lm(Hip_and_Amyg_CBF ~ PMA + GA + Less_Invasive, data=alldata)
CBF_Less_Invasive.lm.summary <- summary(HipandamygCBF_Less_Invasive.lm)
HipandamygCBF_Less_Invasive.lm.summary = CBF_Less_Invasive.lm.summary
CBF_Less_Invasive.predict <- ggpredict(HipandamygCBF_Less_Invasive.lm, terms=c("Less_Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Less_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Less_Invasive.lm.summary$coefficients[4,4],2)))
HipandAmygCBF_Lessinvasive_plot <- ggplot() + geom_point(data = alldata, aes(x = Less_Invasive, y = Hip_and_Amyg_CBF))  +
  geom_smooth(data=alldata, aes(x = Less_Invasive, y = Hip_and_Amyg_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Less_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Less_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Less_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Less_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "Hip and Amyg CBF (ml/100g/min)", x = "")+ ylim(6,37)+
  annotate(geom="text", x=5, y=35, label=paste("Adj R Sq = ", round(CBF_Less_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

(CBF_v_LessInvasive_patch <- GMCBF_Lessinvasive_plot + WMCBF_Lessinvasive_plot + DeepGMCBF_Lessinvasive_plot + CerebellumCBF_Lessinvasive_plot + BrainstemCBF_Lessinvasive_plot + HipandAmygCBF_Lessinvasive_plot)
```

# CBF ~ Roomair

```{r, echo=FALSE, message=F, warning=F}
GMCBF_roomair.lm <- lm(GM_CBF ~ PMA + GA + roomair, data=alldata)
CBF_roomair.lm.summary <- summary(GMCBF_roomair.lm)
GMCBF_roomair.lm.summary = CBF_roomair.lm.summary
CBF_roomair.predict <- ggpredict(GMCBF_roomair.lm, terms=c("roomair"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_roomair.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_roomair.lm.summary$coefficients[4,4],2)))
GMCBF_roomair_plot <- ggplot() + geom_point(data = alldata, aes(x = roomair, y = GM_CBF))  +
  geom_smooth(data=alldata, aes(x = roomair, y = GM_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_roomair.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_roomair.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_roomair.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_roomair.predict, aes(x,predicted), color="blue")+
  labs(y= "GM CBF\n (ml/100g/min)", x = "")+ylim(4,26)+
  annotate(geom="text", x=7, y=25, label=paste("Adj R Sq = ", round(CBF_roomair.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

WMCBF_roomair.lm <- lm(WM_CBF ~ PMA + GA + roomair, data=alldata)
CBF_roomair.lm.summary <- summary(WMCBF_roomair.lm)
WMCBF_roomair.lm.summary = CBF_roomair.lm.summary
CBF_roomair.predict <- ggpredict(WMCBF_roomair.lm, terms=c("roomair"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_roomair.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_roomair.lm.summary$coefficients[4,4],2)))
WMCBF_roomair_plot <- ggplot() + geom_point(data = alldata, aes(x = roomair, y = WM_CBF))  +
  geom_smooth(data=alldata, aes(x = roomair, y = WM_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_roomair.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_roomair.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_roomair.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_roomair.predict, aes(x,predicted), color="blue")+
  labs(y= "WM CBF\n (ml/100g/min)", x = "")+ylim(3,21)+
  annotate(geom="text", x=7, y=20, label=paste("Adj R Sq = ", round(CBF_roomair.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

DeepGMCBF_roomair.lm <- lm(Deep_GM_CBF ~ PMA + GA + roomair, data=alldata)
CBF_roomair.lm.summary <- summary(DeepGMCBF_roomair.lm)
DeepGMCBF_roomair.lm.summary = CBF_roomair.lm.summary
CBF_roomair.predict <- ggpredict(DeepGMCBF_roomair.lm, terms=c("roomair"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_roomair.lm.summary$coefficients[4,4], 4) < 0.05, "p < 0.05", paste("p = ", round(CBF_roomair.lm.summary$coefficients[4,4],2)))
DeepGMCBF_roomair_plot <- ggplot() + geom_point(data = alldata, aes(x = roomair, y = Deep_GM_CBF))  +
  geom_smooth(data=alldata, aes(x = roomair, y = Deep_GM_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_roomair.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_roomair.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_roomair.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_roomair.predict, aes(x,predicted), color="blue")+
  labs(y= "Deep GM CBF\n (ml/100g/min)", x = "")+ylim(3,38)+
  annotate(geom="text", x=7, y=37, label=paste("Adj R Sq = ", round(CBF_roomair.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CerebellumCBF_roomair.lm <- lm(Cerebellum_CBF ~ PMA + GA + roomair, data=alldata)
CBF_roomair.lm.summary <- summary(CerebellumCBF_roomair.lm)
CerebellumCBF_roomair.lm.summary = CBF_roomair.lm.summary
CBF_roomair.predict <- ggpredict(CerebellumCBF_roomair.lm, terms=c("roomair"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_roomair.lm.summary$coefficients[4,4], 4) < 0.05, "p < 0.05", paste("p = ", round(CBF_roomair.lm.summary$coefficients[4,4],2)))
CerebellumCBF_roomair_plot <- ggplot() + geom_point(data = alldata, aes(x = roomair, y = Cerebellum_CBF))  +
  geom_smooth(data=alldata, aes(x = roomair, y = Cerebellum_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_roomair.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_roomair.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_roomair.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_roomair.predict, aes(x,predicted), color="blue")+
  labs(y= "Cerebellum CBF\n (ml/100g/min)", x = "")+ylim(4,41)+
  annotate(geom="text", x=7, y=40, label=paste("Adj R Sq = ", round(CBF_roomair.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

BrainstemCBF_roomair.lm <- lm(Brain_Stem_CBF ~ PMA + GA + roomair, data=alldata)
CBF_roomair.lm.summary <- summary(BrainstemCBF_roomair.lm)
BrainstemCBF_roomair.lm.summary = CBF_roomair.lm.summary
CBF_roomair.predict <- ggpredict(BrainstemCBF_roomair.lm, terms=c("roomair"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_roomair.lm.summary$coefficients[4,4], 4) < 0.05, "p < 0.05", paste("p = ", round(CBF_roomair.lm.summary$coefficients[4,4],2)))
BrainstemCBF_roomair_plot <- ggplot() + geom_point(data = alldata, aes(x = roomair, y = Brain_Stem_CBF))  +
  geom_smooth(data=alldata, aes(x = roomair, y = Cerebellum_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_roomair.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_roomair.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_roomair.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_roomair.predict, aes(x,predicted), color="blue")+
  labs(y= "Brainstem CBF\n (ml/100g/min)", x = "Room Air (Days)")+ylim(4,58)+
  annotate(geom="text", x=7, y=57, label=paste("Adj R Sq = ", round(CBF_roomair.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

HipandamygCBF_roomair.lm <- lm(Hip_and_Amyg_CBF ~ PMA + GA + roomair, data=alldata)
CBF_roomair.lm.summary <- summary(HipandamygCBF_roomair.lm)
HipandamygCBF_roomair.lm.summary = CBF_roomair.lm.summary
CBF_roomair.predict <- ggpredict(HipandamygCBF_roomair.lm, terms=c("roomair"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_roomair.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_roomair.lm.summary$coefficients[4,4],2)))
HipandAmygCBF_roomair_plot <- ggplot() + geom_point(data = alldata, aes(x = roomair, y = Hip_and_Amyg_CBF))  +
  geom_smooth(data=alldata, aes(x = roomair, y = Hip_and_Amyg_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_roomair.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_roomair.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_roomair.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_roomair.predict, aes(x,predicted), color="blue")+
  labs(y= "Hip and Amyg CBF\n (ml/100g/min)", x = "")+ylim(5,38)+
  annotate(geom="text", x=7, y=37, label=paste("Adj R Sq = ", round(CBF_roomair.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

(CBF_v_Roomair_patch <- GMCBF_roomair_plot + WMCBF_roomair_plot + DeepGMCBF_roomair_plot + CerebellumCBF_roomair_plot + BrainstemCBF_roomair_plot + HipandAmygCBF_roomair_plot)
```

# CBF ~ Total Vent

```{r, echo=FALSE, message=F, warning=F}
CBF_Vent.lm <- lm(GM_CBF ~ PMA + GA + Total_vent, data=alldata)
CBF_Vent.lm.summary <- summary(CBF_Vent.lm)
CBF_Vent.predict <- ggpredict(CBF_Vent.lm, terms=c("Total_vent"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Vent.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Vent.lm.summary$coefficients[4,4],2)))
GMCBF_Vent_plot <- ggplot() + geom_point(data = alldata, aes(x = Total_vent, y = GM_CBF))  +
  geom_smooth(data=alldata, aes(x = Total_vent, y = GM_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Vent.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Vent.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Vent.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Vent.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=25, y=25, label=paste("Adj R Sq = ", round(CBF_Vent.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "GM CBF (ml/100g/min)", x = "")+
theme_minimalism()

CBF_Vent.lm <- lm(WM_CBF ~ PMA + GA + Total_vent, data=alldata)
CBF_Vent.lm.summary <- summary(CBF_Vent.lm)
CBF_Vent.predict <- ggpredict(CBF_Vent.lm, terms=c("Total_vent"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Vent.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Vent.lm.summary$coefficients[4,4],2)))
WMCBF_Vent_plot <- ggplot() + geom_point(data = alldata, aes(x = Total_vent, y = WM_CBF))  +
  geom_smooth(data=alldata, aes(x = Total_vent, y = WM_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Vent.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Vent.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Vent.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Vent.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=25, y=19, label=paste("Adj R Sq = ", round(CBF_Vent.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "WM CBF (ml/100g/min)", x = "")+
theme_minimalism()

CBF_Vent.lm <- lm(Deep_GM_CBF ~ PMA + GA + Total_vent, data=alldata)
CBF_Vent.lm.summary <- summary(CBF_Vent.lm)
CBF_Vent.predict <- ggpredict(CBF_Vent.lm, terms=c("Total_vent"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Vent.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Vent.lm.summary$coefficients[4,4],2)))
DeepGMCBF_Vent_plot <- ggplot() + geom_point(data = alldata, aes(x = Total_vent, y = Deep_GM_CBF))  +
  geom_smooth(data=alldata, aes(x = Total_vent, y = Deep_GM_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Vent.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Vent.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Vent.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Vent.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=25, y=38, label=paste("Adj R Sq = ", round(CBF_Vent.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "Deep GM CBF (ml/100g/min)", x = "")+ylim(7,39)+
theme_minimalism()

CBF_Vent.lm <- lm(Cerebellum_CBF ~ PMA + GA + Total_vent, data=alldata)
CBF_Vent.lm.summary <- summary(CBF_Vent.lm)
CBF_Vent.predict <- ggpredict(CBF_Vent.lm, terms=c("Total_vent"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Vent.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Vent.lm.summary$coefficients[4,4],2)))
CerebellumCBF_Vent_plot <- ggplot() + geom_point(data = alldata, aes(x = Total_vent, y = Cerebellum_CBF))  +
  geom_smooth(data=alldata, aes(x = Total_vent, y = Cerebellum_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Vent.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Vent.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Vent.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Vent.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=25, y=42, label=paste("Adj R Sq = ", round(CBF_Vent.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "Cerebellum CBF (ml/100g/min)", x = "")+
theme_minimalism()

CBF_Vent.lm <- lm(Brain_Stem_CBF ~ PMA + GA + Total_vent, data=alldata)
CBF_Vent.lm.summary <- summary(CBF_Vent.lm)
CBF_Vent.predict <- ggpredict(CBF_Vent.lm, terms=c("Total_vent"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Vent.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Vent.lm.summary$coefficients[4,4],2)))
BrainstemCBF_Vent_plot <- ggplot() + geom_point(data = alldata, aes(x = Total_vent, y = Brain_Stem_CBF))  +
  geom_smooth(data=alldata, aes(x = Total_vent, y = Cerebellum_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Vent.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Vent.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Vent.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Vent.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=25, y=55, label=paste("Adj R Sq = ", round(CBF_Vent.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "Brainstem CBF (ml/100g/min)", x = "Sum of All Categories (Days)")+
theme_minimalism()

CBF_Vent.lm <- lm(Hip_and_Amyg_CBF ~ PMA + GA + Total_vent, data=alldata)
CBF_Vent.lm.summary <- summary(CBF_Vent.lm)
CBF_Vent.predict <- ggpredict(CBF_Vent.lm, terms=c("Total_vent"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Vent.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Vent.lm.summary$coefficients[4,4],2)))
HipandAmygCBF_Vent_plot <- ggplot() + geom_point(data = alldata, aes(x = Total_vent, y = Hip_and_Amyg_CBF))  +
  geom_smooth(data=alldata, aes(x = Total_vent, y = Hip_and_Amyg_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Vent.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Vent.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Vent.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Vent.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=25, y=38, label=paste("Adj R Sq = ", round(CBF_Vent.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "Hip and Amyg CBF (ml/100g/min)", x = "")+
theme_minimalism()

(CBF_v_TotalVent_patch <- GMCBF_Vent_plot + WMCBF_Vent_plot + DeepGMCBF_Vent_plot + CerebellumCBF_Vent_plot + BrainstemCBF_Vent_plot + HipandAmygCBF_Vent_plot)
```

# CBF ~ Porportion of days on ventilation

```{r, echo=FALSE, message=F, warning=F}
GMCBF_Vent_P.lm <- lm(GM_CBF ~ PMA + GA + Vent_P, data=alldata)
CBF_Vent_P.lm.summary <- summary(GMCBF_Vent_P.lm)
GMCBF_Vent_P.lm.summary = CBF_Vent_P.lm.summary
CBF_Vent_P.predict <- ggpredict(GMCBF_Vent_P.lm, terms=c("Vent_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Vent_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Vent_P.lm.summary$coefficients[4,4],2)))
GMCBF_VentP_plot <- ggplot() + geom_point(data = alldata, aes(x = Vent_P, y = GM_CBF))  +
  geom_smooth(data=alldata, aes(x = Vent_P, y = GM_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Vent_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Vent_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Vent_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Vent_P.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=0.4, y=21, label=paste("Adj R Sq = ", round(CBF_Vent_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "GM CBF\n (ml/100g/min)", x = "")+ylim(4,22)+
theme_minimalism()

WMCBF_Vent_P.lm <- lm(WM_CBF ~ PMA + GA + Vent_P, data=alldata)
CBF_Vent_P.lm.summary <- summary(WMCBF_Vent_P.lm)
WMCBF_Vent_P.lm.summary = CBF_Vent_P.lm.summary
CBF_Vent_P.predict <- ggpredict(WMCBF_Vent_P.lm, terms=c("Vent_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Vent_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Vent_P.lm.summary$coefficients[4,4],2)))
WMCBF_VentP_plot <- ggplot() + geom_point(data = alldata, aes(x = Vent_P, y = WM_CBF))  +
  geom_smooth(data=alldata, aes(x = Vent_P, y = WM_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Vent_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Vent_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Vent_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Vent_P.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=0.4, y=15, label=paste("Adj R Sq = ", round(CBF_Vent_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "WM CBF\n (ml/100g/min)", x = "")+
theme_minimalism()

DeepGMCBF_Vent_P.lm <- lm(Deep_GM_CBF ~ PMA + GA + Vent_P, data=alldata)
CBF_Vent_P.lm.summary <- summary(DeepGMCBF_Vent_P.lm)
DeepGMCBF_Vent_P.lm.summary = CBF_Vent_P.lm.summary
CBF_Vent_P.predict <- ggpredict(DeepGMCBF_Vent_P.lm, terms=c("Vent_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Vent_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Vent_P.lm.summary$coefficients[4,4],2)))
DeepGMCBF_VentP_plot <- ggplot() + geom_point(data = alldata, aes(x = Vent_P, y = Deep_GM_CBF))  +
  geom_smooth(data=alldata, aes(x = Vent_P, y = Deep_GM_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Vent_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Vent_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Vent_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Vent_P.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=0.4, y=30, label=paste("Adj R Sq = ", round(CBF_Vent_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "Deep GM CBF\n (ml/100g/min)", x = "")+
theme_minimalism()

CerebellumCBF_Vent_P.lm <- lm(Cerebellum_CBF ~ PMA + GA + Vent_P, data=alldata)
CBF_Vent_P.lm.summary <- summary(CerebellumCBF_Vent_P.lm)
CerebellumCBF_Vent_P.lm.summary = CBF_Vent_P.lm.summary
CBF_Vent_P.predict <- ggpredict(CerebellumCBF_Vent_P.lm, terms=c("Vent_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Vent_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Vent_P.lm.summary$coefficients[4,4],2)))
CerebellumCBF_VentP_plot <- ggplot() + geom_point(data = alldata, aes(x = Vent_P, y = Cerebellum_CBF))  +
  geom_smooth(data=alldata, aes(x = Vent_P, y = Cerebellum_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Vent_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Vent_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Vent_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Vent_P.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=0.4, y=35, label=paste("Adj R Sq = ", round(CBF_Vent_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "Cerebellum CBF\n (ml/100g/min)", x = "")+ylim(3,36)+
theme_minimalism()

BrainstemCBF_Vent_P.lm <- lm(Brain_Stem_CBF ~ PMA + GA + Vent_P, data=alldata)
CBF_Vent_P.lm.summary <- summary(BrainstemCBF_Vent_P.lm)
BrainstemCBF_Vent_P.lm.summary = CBF_Vent_P.lm.summary
CBF_Vent_P.predict <- ggpredict(BrainstemCBF_Vent_P.lm, terms=c("Vent_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Vent_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Vent_P.lm.summary$coefficients[4,4],2)))
BrainstemCBF_VentP_plot <- ggplot() + geom_point(data = alldata, aes(x = Vent_P, y = Brain_Stem_CBF))  +
  geom_smooth(data=alldata, aes(x = Vent_P, y = Cerebellum_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Vent_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Vent_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Vent_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Vent_P.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=0.4, y=42, label=paste("Adj R Sq = ", round(CBF_Vent_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "Brainstem CBF\n (ml/100g/min)", x = "Proportion of Time on All Categories")+
theme_minimalism()

HipandamygCBF_Vent_P.lm <- lm(Hip_and_Amyg_CBF ~ PMA + GA + Vent_P, data=alldata)
CBF_Vent_P.lm.summary <- summary(HipandamygCBF_Vent_P.lm)
HipandamygCBF_Vent_P.lm.summary = CBF_Vent_P.lm.summary
CBF_Vent_P.predict <- ggpredict(HipandamygCBF_Vent_P.lm, terms=c("Vent_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_Vent_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_Vent_P.lm.summary$coefficients[4,4],2)))
HipandAmygCBF_VentP_plot <- ggplot() + geom_point(data = alldata, aes(x = Vent_P, y = Hip_and_Amyg_CBF))  +
  geom_smooth(data=alldata, aes(x = Vent_P, y = Hip_and_Amyg_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_Vent_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_Vent_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_Vent_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_Vent_P.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=0.4, y=30, label=paste("Adj R Sq = ", round(CBF_Vent_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "Hip and Amyg CBF \n (ml/100g/min)", x = "")+
theme_minimalism()

(CBF_v_VentPerc_patch <- GMCBF_VentP_plot + WMCBF_VentP_plot + DeepGMCBF_VentP_plot + CerebellumCBF_VentP_plot + BrainstemCBF_VentP_plot + HipandAmygCBF_VentP_plot)
```

# CBF ~ Percent of Days on Invasive Ventilation

```{r, echo=FALSE, message=F, warning=F}
CBF_IN_P.lm <- lm(GM_CBF ~ PMA + GA + IN_P , data=alldata)
CBF_IN_P.lm.summary <- summary(CBF_IN_P.lm)
CBF_IN_P.predict <- ggpredict(CBF_IN_P.lm, terms=c("IN_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_IN_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_IN_P.lm.summary$coefficients[4,4],2)))
GMCBF_InvPerc_plot <- ggplot() + geom_point(data = alldata, aes(x = IN_P, y = GM_CBF))  +
  geom_smooth(data=alldata, aes(x = IN_P, y = GM_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_IN_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_IN_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_IN_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_IN_P.predict, aes(x,predicted), color="blue")+
  labs(y= "GM CBF (ml/100g/min)", x = "")+ ylim(5,25) +
  annotate(geom="text", x=0.1, y=23, label=paste("Adj R Sq = ", round(CBF_IN_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CBF_IN_P.lm <- lm(WM_CBF ~ PMA + GA + IN_P , data=alldata)
CBF_IN_P.lm.summary <- summary(CBF_IN_P.lm)
CBF_IN_P.predict <- ggpredict(CBF_IN_P.lm, terms=c("IN_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_IN_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_IN_P.lm.summary$coefficients[4,4],2)))
WMCBF_InvPerc_plot <- ggplot() + geom_point(data = alldata, aes(x = IN_P, y = WM_CBF))  +
  geom_smooth(data=alldata, aes(x = IN_P, y = WM_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_IN_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_IN_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_IN_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_IN_P.predict, aes(x,predicted), color="blue")+
  labs(y= "WM CBF (ml/100g/min)", x = "")+
  annotate(geom="text", x=0.1, y=16, label=paste("Adj R Sq = ", round(CBF_IN_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CBF_IN_P.lm <- lm(Deep_GM_CBF ~ PMA + GA + IN_P , data=alldata)
CBF_IN_P.lm.summary <- summary(CBF_IN_P.lm)
CBF_IN_P.predict <- ggpredict(CBF_IN_P.lm, terms=c("IN_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_IN_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_IN_P.lm.summary$coefficients[4,4],2)))
DeepGMCBF_InvPerc_plot <- ggplot() + geom_point(data = alldata, aes(x = IN_P, y = Deep_GM_CBF))  +
  geom_smooth(data=alldata, aes(x = IN_P, y = Deep_GM_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_IN_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_IN_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_IN_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_IN_P.predict, aes(x,predicted), color="blue")+
  labs(y= "Deep GM CBF (ml/100g/min)", x = "")+
  annotate(geom="text", x=0.1, y=30, label=paste("Adj R Sq = ", round(CBF_IN_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CBF_IN_P.lm <- lm(Cerebellum_CBF ~ PMA + GA + IN_P , data=alldata)
CBF_IN_P.lm.summary <- summary(CBF_IN_P.lm)
CBF_IN_P.predict <- ggpredict(CBF_IN_P.lm, terms=c("IN_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_IN_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_IN_P.lm.summary$coefficients[4,4],2)))
CerebellumCBF_InvPerc_plot <- ggplot() + geom_point(data = alldata, aes(x = IN_P, y = Cerebellum_CBF))  +
  geom_smooth(data=alldata, aes(x = IN_P, y = Cerebellum_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_IN_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_IN_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_IN_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_IN_P.predict, aes(x,predicted), color="blue")+
  labs(y= "Cerebellum CBF (ml/100g/min)", x = "")+ ylim(7,42)+
  annotate(geom="text", x=0.1, y=40, label=paste("Adj R Sq = ", round(CBF_IN_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CBF_IN_P.lm <- lm(Brain_Stem_CBF ~ PMA + GA + IN_P , data=alldata)
CBF_IN_P.lm.summary <- summary(CBF_IN_P.lm)
CBF_IN_P.predict <- ggpredict(CBF_IN_P.lm, terms=c("IN_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_IN_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_IN_P.lm.summary$coefficients[4,4],2)))
BrainstemCBF_InvPerc_plot <- ggplot() + geom_point(data = alldata, aes(x = IN_P, y = Brain_Stem_CBF))  +
  geom_smooth(data=alldata, aes(x = IN_P, y = Brain_Stem_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_IN_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_IN_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_IN_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_IN_P.predict, aes(x,predicted), color="blue")+
  labs(y= "Brainstem CBF (ml/100g/min)", x = "Percentage of Time on Category 1n")+ ylim(7,52)+
  annotate(geom="text", x=0.1, y=50, label=paste("Adj R Sq = ", round(CBF_IN_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CBF_IN_P.lm <- lm(Hip_and_Amyg_CBF ~ PMA + GA + IN_P , data=alldata)
CBF_IN_P.lm.summary <- summary(CBF_IN_P.lm)
CBF_IN_P.predict <- ggpredict(CBF_IN_P.lm, terms=c("IN_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_IN_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_IN_P.lm.summary$coefficients[4,4],2)))
HipandAmygCBF_InvPerc_plot <- ggplot() + geom_point(data = alldata, aes(x = IN_P, y = Hip_and_Amyg_CBF))  +
  geom_smooth(data=alldata, aes(x = IN_P, y = Hip_and_Amyg_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_IN_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_IN_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_IN_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_IN_P.predict, aes(x,predicted), color="blue")+
  labs(y= "Hip and Amyg CBF (ml/100g/min)", x = "")+ ylim(7,37) +
  annotate(geom="text", x=0.1, y=35, label=paste("Adj R Sq = ", round(CBF_IN_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

(CBF_v_InvPerc_patch <- GMCBF_InvPerc_plot + WMCBF_InvPerc_plot + DeepGMCBF_InvPerc_plot + CerebellumCBF_InvPerc_plot + BrainstemCBF_InvPerc_plot + HipandAmygCBF_InvPerc_plot)
```

# CBF ~ Percent of Days on Noninvasive Ventilation

```{r, echo=FALSE, message=F, warning=F}
CBF_NI_P.lm <- lm(GM_CBF ~ PMA + GA + NI_P , data=alldata)
CBF_NI_P.lm.summary <- summary(CBF_NI_P.lm)
CBF_NI_P.predict <- ggpredict(CBF_NI_P.lm, terms=c("NI_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_NI_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_NI_P.lm.summary$coefficients[4,4],2)))
GMCBF_NIPerc_plot <- ggplot() + geom_point(data = alldata, aes(x = NI_P, y = GM_CBF))  +
  geom_smooth(data=alldata, aes(x = NI_P, y = GM_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_NI_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_NI_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_NI_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_NI_P.predict, aes(x,predicted), color="blue")+
  labs(y= "GM CBF (ml/100g/min)", x = "n")+ylim(4,26)+
  annotate(geom="text", x=0.2, y=25, label=paste("Adj R Sq = ", round(CBF_NI_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CBF_NI_P.lm <- lm(WM_CBF ~ PMA + GA + NI_P , data=alldata)
CBF_NI_P.lm.summary <- summary(CBF_NI_P.lm)
CBF_NI_P.predict <- ggpredict(CBF_NI_P.lm, terms=c("NI_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_NI_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_NI_P.lm.summary$coefficients[4,4],2)))
WMCBF_NIPerc_plot <- ggplot() + geom_point(data = alldata, aes(x = NI_P, y = WM_CBF))  +
  geom_smooth(data=alldata, aes(x = NI_P, y = WM_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_NI_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_NI_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_NI_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_NI_P.predict, aes(x,predicted), color="blue")+
  labs(y= "WM CBF (ml/100g/min)", x = "")+ylim(4,21)+
  annotate(geom="text", x=0.2, y=20, label=paste("Adj R Sq = ", round(CBF_NI_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CBF_NI_P.lm <- lm(Deep_GM_CBF ~ PMA + GA + NI_P , data=alldata)
CBF_NI_P.lm.summary <- summary(CBF_NI_P.lm)
CBF_NI_P.predict <- ggpredict(CBF_NI_P.lm, terms=c("NI_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_NI_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_NI_P.lm.summary$coefficients[4,4],2)))
DeepGMCBF_NIPerc_plot <- ggplot() + geom_point(data = alldata, aes(x = NI_P, y = Deep_GM_CBF))  +
  geom_smooth(data=alldata, aes(x = NI_P, y = Deep_GM_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_NI_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_NI_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_NI_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_NI_P.predict, aes(x,predicted), color="blue")+
  labs(y= "Deep GM CBF (ml/100g/min)", x = "")+ylim(5,36)+
  annotate(geom="text", x=0.2, y=35, label=paste("Adj R Sq = ", round(CBF_NI_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CBF_NI_P.lm <- lm(Cerebellum_CBF ~ PMA + GA + NI_P , data=alldata)
CBF_NI_P.lm.summary <- summary(CBF_NI_P.lm)
CBF_NI_P.predict <- ggpredict(CBF_NI_P.lm, terms=c("NI_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_NI_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_NI_P.lm.summary$coefficients[4,4],2)))
CerebellumCBF_NIPerc_plot <- ggplot() + geom_point(data = alldata, aes(x = NI_P, y = Cerebellum_CBF))  +
  geom_smooth(data=alldata, aes(x = NI_P, y = Cerebellum_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_NI_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_NI_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_NI_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_NI_P.predict, aes(x,predicted), color="blue")+
  labs(y= "Cerebellum CBF (ml/100g/min)", x = "")+ylim(7,41)+
  annotate(geom="text", x=0.2, y=40, label=paste("Adj R Sq = ", round(CBF_NI_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CBF_NI_P.lm <- lm(Brain_Stem_CBF ~ PMA + GA + NI_P , data=alldata)
CBF_NI_P.lm.summary <- summary(CBF_NI_P.lm)
CBF_NI_P.predict <- ggpredict(CBF_NI_P.lm, terms=c("NI_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_NI_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_NI_P.lm.summary$coefficients[4,4],2)))
BrainstemCBF_NIPerc_plot <- ggplot() + geom_point(data = alldata, aes(x = NI_P, y = Brain_Stem_CBF))  +
  geom_smooth(data=alldata, aes(x = NI_P, y = Brain_Stem_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_NI_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_NI_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_NI_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_NI_P.predict, aes(x,predicted), color="blue")+
  labs(y= "Brainstem CBF (ml/100g/min)", x = "Percentage of Time on Category 2")+ylim(7,51)+
  annotate(geom="text", x=0.2, y=50, label=paste("Adj R Sq = ", round(CBF_NI_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CBF_NI_P.lm <- lm(Hip_and_Amyg_CBF ~ PMA + GA + NI_P , data=alldata)
CBF_NI_P.lm.summary <- summary(CBF_NI_P.lm)
CBF_NI_P.predict <- ggpredict(CBF_NI_P.lm, terms=c("NI_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_NI_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_NI_P.lm.summary$coefficients[4,4],2)))
HipandAmygCBF_NIPerc_plot <- ggplot() + geom_point(data = alldata, aes(x = NI_P, y = Hip_and_Amyg_CBF))  +
  geom_smooth(data=alldata, aes(x = NI_P, y = Hip_and_Amyg_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_NI_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_NI_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_NI_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_NI_P.predict, aes(x,predicted), color="blue")+
  labs(y= "Hip and Amyg CBF (ml/100g/min)", x = "")+ylim(7,36)+
  annotate(geom="text", x=0.2, y=35, label=paste("Adj R Sq = ", round(CBF_NI_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

(CBF_v_NonInvPerc_patch <- GMCBF_NIPerc_plot + WMCBF_NIPerc_plot + DeepGMCBF_NIPerc_plot + CerebellumCBF_NIPerc_plot + BrainstemCBF_NIPerc_plot + HipandAmygCBF_NIPerc_plot)
```

# CBF ~ Percent of Days on Less Invasive Ventilation

```{r, echo=FALSE, message=F, warning=F}
CBF_LI_P.lm <- lm(GM_CBF ~ PMA + GA + LI_P , data=alldata)
CBF_LI_P.lm.summary <- summary(CBF_LI_P.lm)
CBF_LI_P.predict <- ggpredict(CBF_LI_P.lm, terms=c("LI_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_LI_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_LI_P.lm.summary$coefficients[4,4],2)))
GMCBF_LIP_plot <- ggplot() + geom_point(data = alldata, aes(x = LI_P, y = GM_CBF))  +
  geom_smooth(data=alldata, aes(x = LI_P, y = GM_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_LI_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_LI_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_LI_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_LI_P.predict, aes(x,predicted), color="blue")+
  labs(y= "GM CBF (ml/100g/min)", x = "")+ylim(5,26)+
  annotate(geom="text", x=0.4, y=25, label=paste("Adj R Sq = ", round(CBF_LI_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CBF_LI_P.lm <- lm(WM_CBF ~ PMA + GA + LI_P , data=alldata)
CBF_LI_P.lm.summary <- summary(CBF_LI_P.lm)
CBF_LI_P.predict <- ggpredict(CBF_LI_P.lm, terms=c("LI_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_LI_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_LI_P.lm.summary$coefficients[4,4],2)))
WMCBF_LIP_plot <- ggplot() + geom_point(data = alldata, aes(x = LI_P, y = WM_CBF))  +
  geom_smooth(data=alldata, aes(x = LI_P, y = WM_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_LI_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_LI_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_LI_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_LI_P.predict, aes(x,predicted), color="blue")+
  labs(y= "WM CBF (ml/100g/min)", x = "")+ylim(5,21)+
  annotate(geom="text", x=0.4, y=20, label=paste("Adj R Sq = ", round(CBF_LI_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CBF_LI_P.lm <- lm(Deep_GM_CBF ~ PMA + GA + LI_P , data=alldata)
CBF_LI_P.lm.summary <- summary(CBF_LI_P.lm)
CBF_LI_P.predict <- ggpredict(CBF_LI_P.lm, terms=c("LI_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_LI_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_LI_P.lm.summary$coefficients[4,4],2)))
DeepGMCBF_LIP_plot <- ggplot() + geom_point(data = alldata, aes(x = LI_P, y = Deep_GM_CBF))  +
  geom_smooth(data=alldata, aes(x = LI_P, y = Deep_GM_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_LI_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_LI_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_LI_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_LI_P.predict, aes(x,predicted), color="blue")+
  labs(y= "Deep GM CBF (ml/100g/min)", x = "")+ylim(7,33)+
  annotate(geom="text", x=0.4, y=32, label=paste("Adj R Sq = ", round(CBF_LI_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CBF_LI_P.lm <- lm(Cerebellum_CBF ~ PMA + GA + LI_P , data=alldata)
CBF_LI_P.lm.summary <- summary(CBF_LI_P.lm)
CBF_LI_P.predict <- ggpredict(CBF_LI_P.lm, terms=c("LI_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_LI_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_LI_P.lm.summary$coefficients[4,4],2)))
CerebellumCBF_LIP_plot <- ggplot() + geom_point(data = alldata, aes(x = LI_P, y = Cerebellum_CBF))  +
  geom_smooth(data=alldata, aes(x = LI_P, y = Cerebellum_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_LI_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_LI_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_LI_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_LI_P.predict, aes(x,predicted), color="blue")+
  labs(y= "Cerebellum CBF (ml/100g/min)", x = "")+ylim(7,41)+
  annotate(geom="text", x=0.4, y=40, label=paste("Adj R Sq = ", round(CBF_LI_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CBF_LI_P.lm <- lm(Brain_Stem_CBF ~ PMA + GA + LI_P , data=alldata)
CBF_LI_P.lm.summary <- summary(CBF_LI_P.lm)
CBF_LI_P.predict <- ggpredict(CBF_LI_P.lm, terms=c("LI_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_LI_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_LI_P.lm.summary$coefficients[4,4],2)))
BrainstemCBF_LIP_plot <- ggplot() + geom_point(data = alldata, aes(x = LI_P, y = Brain_Stem_CBF))  +
  geom_smooth(data=alldata, aes(x = LI_P, y = Brain_Stem_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_LI_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_LI_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_LI_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_LI_P.predict, aes(x,predicted), color="blue")+
  labs(y= "Brainstem CBF (ml/100g/min)", x = "Percentage of Time on Category 3")+ylim(8,51)+
  annotate(geom="text", x=0.4, y=50, label=paste("Adj R Sq = ", round(CBF_LI_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CBF_LI_P.lm <- lm(Hip_and_Amyg_CBF ~ PMA + GA + LI_P , data=alldata)
CBF_LI_P.lm.summary <- summary(CBF_LI_P.lm)
CBF_LI_P.predict <- ggpredict(CBF_LI_P.lm, terms=c("LI_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CBF_LI_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CBF_LI_P.lm.summary$coefficients[4,4],2)))
HipandAmygCBF_LIP_plot <- ggplot() + geom_point(data = alldata, aes(x = LI_P, y = Hip_and_Amyg_CBF))  +
  geom_smooth(data=alldata, aes(x = LI_P, y = Hip_and_Amyg_CBF), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CBF_LI_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CBF_LI_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CBF_LI_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CBF_LI_P.predict, aes(x,predicted), color="blue")+
  labs(y= "Hip and Amyg CBF (ml/100g/min)", x = "")+ylim(7,36)+
  annotate(geom="text", x=0.4, y=35, label=paste("Adj R Sq = ", round(CBF_LI_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

(CBF_v_LessInvPerc_patch <- GMCBF_LIP_plot + WMCBF_LIP_plot + DeepGMCBF_LIP_plot + CerebellumCBF_LIP_plot + BrainstemCBF_LIP_plot + HipandAmygCBF_LIP_plot)
```

# CMRO2 ~ Invasive

```{r, echo=FALSE, message=F, warning=F}
GMCMRO2_Invasive.lm <- lm(GM_CMRO2 ~ PMA + GA + Invasive, data=alldata)
CMRO2_Invasive.lm.summary <- summary(GMCMRO2_Invasive.lm)
GMCMRO2_Invasive.lm.summary = CMRO2_Invasive.lm.summary
CMRO2_Invasive.predict <- ggpredict(GMCMRO2_Invasive.lm, terms=c("Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Invasive.lm.summary$coefficients[4,4],2)))
GMCMRO2_Invasive_plot <- ggplot() + geom_point(data = alldata, aes(x = Invasive, y = GM_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Invasive, y = GM_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "GM CMRO2 \n (Î¼mol/100g/min)", x = "")+
  annotate(geom="text", x=5, y=49, label=paste("Adj R Sq = ", round(CMRO2_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

WMCMRO2_Invasive.lm <- lm(WM_CMRO2 ~ PMA + GA + Invasive, data=alldata)
CMRO2_Invasive.lm.summary <- summary(WMCMRO2_Invasive.lm)
WMCMRO2_Invasive.lm.summary = CMRO2_Invasive.lm.summary
CMRO2_Invasive.predict <- ggpredict(WMCMRO2_Invasive.lm, terms=c("Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Invasive.lm.summary$coefficients[4,4],2)))
WMCMRO2_Invasive_plot <- ggplot() + geom_point(data = alldata, aes(x = Invasive, y = WM_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Invasive, y = WM_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "WM CMRO2 \n (Î¼mol/100g/min)", x = "")+
  annotate(geom="text", x=5, y=38, label=paste("Adj R Sq = ", round(CMRO2_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

DeepGMCMRO2_Invasive.lm <- lm(Deep_GM_CMRO2 ~ PMA + GA + Invasive, data=alldata)
CMRO2_Invasive.lm.summary <- summary(DeepGMCMRO2_Invasive.lm)
DeepGMCMRO2_Invasive.lm.summary = CMRO2_Invasive.lm.summary
CMRO2_Invasive.predict <- ggpredict(DeepGMCMRO2_Invasive.lm, terms=c("Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Invasive.lm.summary$coefficients[4,4],2)))
DeepGMCMRO2_Invasive_plot <- ggplot() + geom_point(data = alldata, aes(x = Invasive, y = Deep_GM_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Invasive, y = Deep_GM_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "Deep GM CMRO2 \n (Î¼mol/100g/min)", x = "")+ylim(3,76)+
  annotate(geom="text", x=5, y=75, label=paste("Adj R Sq = ", round(CMRO2_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CerebellumCMRO2_Invasive.lm <- lm(Cerebellum_CMRO2 ~ PMA + GA + Invasive, data=alldata)
CMRO2_Invasive.lm.summary <- summary(CerebellumCMRO2_Invasive.lm)
CerebellumCMRO2_Invasive.lm.summary = CMRO2_Invasive.lm.summary
CMRO2_Invasive.predict <- ggpredict(CerebellumCMRO2_Invasive.lm, terms=c("Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Invasive.lm.summary$coefficients[4,4],2)))
CerebellumCMRO2_Invasive_plot <- ggplot() + geom_point(data = alldata, aes(x = Invasive, y = Cerebellum_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Invasive, y = Cerebellum_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "Cerebellum CMRO2 \n (Î¼mol/100g/min)", x = "")+
  annotate(geom="text", x=5, y=80, label=paste("Adj R Sq = ", round(CMRO2_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

BrainstemCMRO2_Invasive.lm <- lm(Brain_Stem_CMRO2 ~ PMA + GA + Invasive, data=alldata)
CMRO2_Invasive.lm.summary <- summary(BrainstemCMRO2_Invasive.lm)
BrainstemCMRO2_Invasive.lm.summary = CMRO2_Invasive.lm.summary
CMRO2_Invasive.predict <- ggpredict(BrainstemCMRO2_Invasive.lm, terms=c("Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Invasive.lm.summary$coefficients[4,4],2)))
BrainstemCMRO2_Invasive_plot <- ggplot() + geom_point(data = alldata, aes(x = Invasive, y = Brain_Stem_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Invasive, y = Brain_Stem_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "Brainstem CMRO2 \n (Î¼mol/100g/min)", x = "Category 1 (Days)")+
  annotate(geom="text", x=5, y=100, label=paste("Adj R Sq = ", round(CMRO2_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

HipandamygCMRO2_Invasive.lm <- lm(Hip_and_Amyg_CMRO2 ~ PMA + GA + Invasive, data=alldata)
CMRO2_Invasive.lm.summary <- summary(HipandamygCMRO2_Invasive.lm)
HipandamygCMRO2_Invasive.lm.summary = CMRO2_Invasive.lm.summary
CMRO2_Invasive.predict <- ggpredict(HipandamygCMRO2_Invasive.lm, terms=c("Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Invasive.lm.summary$coefficients[4,4],2)))
HipandAmygCMRO2_Invasive_plot <- ggplot() + geom_point(data = alldata, aes(x = Invasive, y = Hip_and_Amyg_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Invasive, y = Hip_and_Amyg_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "Hip and Amyg CMRO2 \n (Î¼mol/100g/min)", x = "")+ylim(10,78)+
  annotate(geom="text", x=5, y=77, label=paste("Adj R Sq = ", round(CMRO2_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

(CMRO2_v_Invasive_patch <- GMCMRO2_Invasive_plot + WMCMRO2_Invasive_plot + DeepGMCMRO2_Invasive_plot + CerebellumCMRO2_Invasive_plot + BrainstemCMRO2_Invasive_plot + HipandAmygCMRO2_Invasive_plot)
```

# CMRO2 ~ Noninvasive

```{r, echo=FALSE, message=F, warning=F}
GMCMRO2_Noninvasive.lm <- lm(GM_CMRO2 ~ PMA + GA + Noninvasive, data=alldata)
CMRO2_Noninvasive.lm.summary <- summary(GMCMRO2_Noninvasive.lm)
GMCMRO2_Noninvasive.lm.summary = CMRO2_Noninvasive.lm.summary
CMRO2_Noninvasive.predict <- ggpredict(GMCMRO2_Noninvasive.lm, terms=c("Noninvasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Noninvasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Noninvasive.lm.summary$coefficients[4,4],2)))
GMCMRO2_Noninv_plot <- ggplot() + geom_point(data = alldata, aes(x = Noninvasive, y = GM_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Noninvasive, y = GM_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Noninvasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Noninvasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Noninvasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Noninvasive.predict, aes(x,predicted), color="blue")+
  labs(y= "GM CMRO2 \n (Î¼mol/100g/min)", x = "")+ylim(8,54)+
  annotate(geom="text", x=15, y=50, label=paste("Adj R Sq = ", round(CMRO2_Noninvasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

WMCMRO2_Noninvasive.lm <- lm(WM_CMRO2 ~ PMA + GA + Noninvasive, data=alldata)
CMRO2_Noninvasive.lm.summary <- summary(WMCMRO2_Noninvasive.lm)
WMCMRO2_Noninvasive.lm.summary = CMRO2_Noninvasive.lm.summary
CMRO2_Noninvasive.predict <- ggpredict(WMCMRO2_Noninvasive.lm, terms=c("Noninvasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Noninvasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Noninvasive.lm.summary$coefficients[4,4],2)))
WMCMRO2_Noninv_plot <- ggplot() + geom_point(data = alldata, aes(x = Noninvasive, y = WM_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Noninvasive, y = WM_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Noninvasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Noninvasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Noninvasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Noninvasive.predict, aes(x,predicted), color="blue")+
  labs(y= "WM CMRO2 \n (Î¼mol/100g/min)", x = "")+ylim(8,41)+
  annotate(geom="text", x=15, y=40, label=paste("Adj R Sq = ", round(CMRO2_Noninvasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

DeepGMCMRO2_Noninvasive.lm <- lm(Deep_GM_CMRO2 ~ PMA + GA + Noninvasive, data=alldata)
CMRO2_Noninvasive.lm.summary <- summary(DeepGMCMRO2_Noninvasive.lm)
DeepGMCMRO2_Noninvasive.lm.summary = CMRO2_Noninvasive.lm.summary
CMRO2_Noninvasive.predict <- ggpredict(DeepGMCMRO2_Noninvasive.lm, terms=c("Noninvasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Noninvasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Noninvasive.lm.summary$coefficients[4,4],2)))
DeepGMCMRO2_Noninv_plot <- ggplot() + geom_point(data = alldata, aes(x = Noninvasive, y = Deep_GM_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Noninvasive, y = Deep_GM_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Noninvasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Noninvasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Noninvasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Noninvasive.predict, aes(x,predicted), color="blue")+
  labs(y= "Deep GM CMRO2 \n (Î¼mol/100g/min)", x = "")+ylim(15,76)+
  annotate(geom="text", x=15, y=75, label=paste("Adj R Sq = ", round(CMRO2_Noninvasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CerebellumCMRO2_Noninvasive.lm <- lm(Cerebellum_CMRO2 ~ PMA + GA + Noninvasive, data=alldata)
CMRO2_Noninvasive.lm.summary <- summary(CerebellumCMRO2_Noninvasive.lm)
CerebellumCMRO2_Noninvasive.lm.summary = CMRO2_Noninvasive.lm.summary
CMRO2_Noninvasive.predict <- ggpredict(CerebellumCMRO2_Noninvasive.lm, terms=c("Noninvasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Noninvasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Noninvasive.lm.summary$coefficients[4,4],2)))
CerebellumCMRO2_Noninv_plot <- ggplot() + geom_point(data = alldata, aes(x = Noninvasive, y = Cerebellum_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Noninvasive, y = Cerebellum_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Noninvasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Noninvasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Noninvasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Noninvasive.predict, aes(x,predicted), color="blue")+
  labs(y= "Cerebellum CMRO2 \n (Î¼mol/100g/min)", x = "")+
  annotate(geom="text", x=15, y=80, label=paste("Adj R Sq = ", round(CMRO2_Noninvasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

BrainstemCMRO2_Noninvasive.lm <- lm(Brain_Stem_CMRO2 ~ PMA + GA + Noninvasive, data=alldata)
CMRO2_Noninvasive.lm.summary <- summary(BrainstemCMRO2_Noninvasive.lm)
BrainstemCMRO2_Noninvasive.lm.summary = CMRO2_Noninvasive.lm.summary
CMRO2_Noninvasive.predict <- ggpredict(BrainstemCMRO2_Noninvasive.lm, terms=c("Noninvasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Noninvasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Noninvasive.lm.summary$coefficients[4,4],2)))
BrainstemCMRO2_Noninv_plot <- ggplot() + geom_point(data = alldata, aes(x = Noninvasive, y = Brain_Stem_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Noninvasive, y = Brain_Stem_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Noninvasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Noninvasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Noninvasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Noninvasive.predict, aes(x,predicted), color="blue")+
  labs(y= "Brainstem CMRO2 \n (Î¼mol/100g/min)", x = "Category 2 (Days)")+
  annotate(geom="text", x=15, y=100, label=paste("Adj R Sq = ", round(CMRO2_Noninvasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

HipandamygCMRO2_Noninvasive.lm <- lm(Hip_and_Amyg_CMRO2 ~ PMA + GA + Noninvasive, data=alldata)
CMRO2_Noninvasive.lm.summary <- summary(HipandamygCMRO2_Noninvasive.lm)
HipandamygCMRO2_Noninvasive.lm.summary = CMRO2_Noninvasive.lm.summary
CMRO2_Noninvasive.predict <- ggpredict(HipandamygCMRO2_Noninvasive.lm, terms=c("Noninvasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Noninvasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Noninvasive.lm.summary$coefficients[4,4],2)))
HipandAmygCMRO2_Noninv_plot <- ggplot() + geom_point(data = alldata, aes(x = Noninvasive, y = Hip_and_Amyg_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Noninvasive, y = Hip_and_Amyg_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Noninvasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Noninvasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Noninvasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Noninvasive.predict, aes(x,predicted), color="blue")+
  labs(y= "Hip and Amyg CMRO2 \n (Î¼mol/100g/min)", x = "")+
  annotate(geom="text", x=15, y=70, label=paste("Adj R Sq = ", round(CMRO2_Noninvasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

(CMRO2_v_NonInvasive_patch <- GMCMRO2_Noninv_plot + WMCMRO2_Noninv_plot + DeepGMCMRO2_Noninv_plot + CerebellumCMRO2_Noninv_plot + BrainstemCMRO2_Noninv_plot + HipandAmygCMRO2_Noninv_plot)
```

# CMRO2 ~ Less Invasive

```{r, echo=FALSE, message=F, warning=F}
GMCMRO2_Less_Invasive.lm <- lm(GM_CMRO2 ~ PMA + GA + Less_Invasive, data=alldata)
CMRO2_Less_Invasive.lm.summary <- summary(GMCMRO2_Less_Invasive.lm)
GMCMRO2_Less_Invasive.lm.summary = CMRO2_Less_Invasive.lm.summary
CMRO2_Less_Invasive.predict <- ggpredict(GMCMRO2_Less_Invasive.lm, terms=c("Less_Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Less_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Less_Invasive.lm.summary$coefficients[4,4],2)))
GMCMRO2_LessInv_plot <- ggplot() + geom_point(data = alldata, aes(x = Less_Invasive, y = GM_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Less_Invasive, y = GM_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Less_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Less_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Less_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Less_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "GM CMRO2 \n (Î¼mol/100g/min)", x = "")+
  annotate(geom="text", x=5, y=50, label=paste("Adj R Sq = ", round(CMRO2_Less_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

WMCMRO2_Less_Invasive.lm <- lm(WM_CMRO2 ~ PMA + GA + Less_Invasive, data=alldata)
CMRO2_Less_Invasive.lm.summary <- summary(WMCMRO2_Less_Invasive.lm)
WMCMRO2_Less_Invasive.lm.summary = CMRO2_Less_Invasive.lm.summary
CMRO2_Less_Invasive.predict <- ggpredict(WMCMRO2_Less_Invasive.lm, terms=c("Less_Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Less_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Less_Invasive.lm.summary$coefficients[4,4],2)))
WMCMRO2_LessInv_plot <- ggplot() + geom_point(data = alldata, aes(x = Less_Invasive, y = WM_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Less_Invasive, y = WM_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Less_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Less_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Less_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Less_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "WM CMRO2 \n (Î¼mol/100g/min)", x = "")+
  annotate(geom="text", x=5, y=50, label=paste("Adj R Sq = ", round(CMRO2_Less_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

DeepGMCMRO2_Less_Invasive.lm <- lm(Deep_GM_CMRO2 ~ PMA + GA + Less_Invasive, data=alldata)
CMRO2_Less_Invasive.lm.summary <- summary(DeepGMCMRO2_Less_Invasive.lm)
DeepGMCMRO2_Less_Invasive.lm.summary = CMRO2_Less_Invasive.lm.summary
CMRO2_Less_Invasive.predict <- ggpredict(DeepGMCMRO2_Less_Invasive.lm, terms=c("Less_Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Less_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Less_Invasive.lm.summary$coefficients[4,4],2)))
DeepGMCMRO2_LessInv_plot <- ggplot() + geom_point(data = alldata, aes(x = Less_Invasive, y = Deep_GM_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Less_Invasive, y = Deep_GM_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Less_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Less_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Less_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Less_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "Deep_GM CMRO2 \n (Î¼mol/100g/min)", x = "")+
  annotate(geom="text", x=3, y=75, label=paste("Adj R Sq = ", round(CMRO2_Less_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CerebellumCMRO2_Less_Invasive.lm <- lm(Cerebellum_CMRO2 ~ PMA + GA + Less_Invasive, data=alldata)
CMRO2_Less_Invasive.lm.summary <- summary(CerebellumCMRO2_Less_Invasive.lm)
CerebellumCMRO2_Less_Invasive.lm.summary = CMRO2_Less_Invasive.lm.summary
CMRO2_Less_Invasive.predict <- ggpredict(CerebellumCMRO2_Less_Invasive.lm, terms=c("Less_Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Less_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Less_Invasive.lm.summary$coefficients[4,4],2)))
CerebellumCMRO2_LessInv_plot <- ggplot() + geom_point(data = alldata, aes(x = Less_Invasive, y = Cerebellum_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Less_Invasive, y = Cerebellum_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Less_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Less_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Less_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Less_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "Cerebellum CMRO2 \n (Î¼mol/100g/min)", x = "")+
  annotate(geom="text", x=5, y=38, label=paste("Adj R Sq = ", round(CMRO2_Less_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

BrainstemCMRO2_Less_Invasive.lm <- lm(Brain_Stem_CMRO2 ~ PMA + GA + Less_Invasive, data=alldata)
CMRO2_Less_Invasive.lm.summary <- summary(BrainstemCMRO2_Less_Invasive.lm)
BrainstemCMRO2_Less_Invasive.lm.summary = CMRO2_Less_Invasive.lm.summary
CMRO2_Less_Invasive.predict <- ggpredict(BrainstemCMRO2_Less_Invasive.lm, terms=c("Less_Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Less_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Less_Invasive.lm.summary$coefficients[4,4],2)))
BrainstemCMRO2_LessInv_plot <- ggplot() + geom_point(data = alldata, aes(x = Less_Invasive, y = Brain_Stem_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Less_Invasive, y = Brain_Stem_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Less_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Less_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Less_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Less_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "Brainstem CMRO2 \n (Î¼mol/100g/min)", x = "Category 3 (Days)")+
  annotate(geom="text", x=3, y=90, label=paste("Adj R Sq = ", round(CMRO2_Less_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

HipandamygCMRO2_Less_Invasive.lm <- lm(Hip_and_Amyg_CMRO2 ~ PMA + GA + Less_Invasive, data=alldata)
CMRO2_Less_Invasive.lm.summary <- summary(HipandamygCMRO2_Less_Invasive.lm)
HipandamygCMRO2_Less_Invasive.lm.summary = CMRO2_Less_Invasive.lm.summary
CMRO2_Less_Invasive.predict <- ggpredict(HipandamygCMRO2_Less_Invasive.lm, terms=c("Less_Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Less_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Less_Invasive.lm.summary$coefficients[4,4],2)))
HipandAmygCMRO2_LessInv_plot <- ggplot() + geom_point(data = alldata, aes(x = Less_Invasive, y = Hip_and_Amyg_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Less_Invasive, y = Hip_and_Amyg_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Less_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Less_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Less_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Less_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "Hip and Amyg CMRO2 \n (Î¼mol/100g/min)", x = "")+
  annotate(geom="text", x=5, y=38, label=paste("Adj R Sq = ", round(CMRO2_Less_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

(CMRO2_v_LessInvasive_patch <- GMCMRO2_LessInv_plot + WMCMRO2_LessInv_plot + DeepGMCMRO2_LessInv_plot + CerebellumCMRO2_LessInv_plot + BrainstemCMRO2_LessInv_plot + HipandAmygCMRO2_LessInv_plot)
```

# CMRO2 ~ Roomair

```{r, echo=FALSE, message=F, warning=F}
GMCMRO2_roomair.lm <- lm(GM_CMRO2 ~ PMA + GA + roomair, data=alldata)
CMRO2_roomair.lm.summary <- summary(GMCMRO2_roomair.lm)
GMCMRO2_roomair.lm.summary = CMRO2_roomair.lm.summary
CMRO2_roomair.predict <- ggpredict(GMCMRO2_roomair.lm, terms=c("roomair"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_roomair.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_roomair.lm.summary$coefficients[4,4],2)))
GMCMRO2_roomair_plot <- ggplot() + geom_point(data = alldata, aes(x = roomair, y = GM_CMRO2))  +
  geom_smooth(data=alldata, aes(x = roomair, y = GM_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_roomair.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_roomair.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_roomair.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_roomair.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=37, y=38, label=paste("Adj R Sq = ", round(CMRO2_roomair.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "GM CMRO2 \n (Î¼mol/100g/min)", x = "")+
theme_minimalism()

WMCMRO2_roomair.lm <- lm(WM_CMRO2 ~ PMA + GA + roomair, data=alldata)
CMRO2_roomair.lm.summary <- summary(WMCMRO2_roomair.lm)
WMCMRO2_roomair.lm.summary = CMRO2_roomair.lm.summary
CMRO2_roomair.predict <- ggpredict(WMCMRO2_roomair.lm, terms=c("roomair"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_roomair.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_roomair.lm.summary$coefficients[4,4],2)))
WMCMRO2_roomair_plot <- ggplot() + geom_point(data = alldata, aes(x = roomair, y = WM_CMRO2))  +
  geom_smooth(data=alldata, aes(x = roomair, y = WM_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_roomair.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_roomair.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_roomair.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_roomair.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=37, y=30, label=paste("Adj R Sq = ", round(CMRO2_roomair.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "WM CMRO2 \n (Î¼mol/100g/min)", x = "")+
theme_minimalism()

DeepGMCMRO2_roomair.lm <- lm(Deep_GM_CMRO2 ~ PMA + GA + roomair, data=alldata)
CMRO2_roomair.lm.summary <- summary(DeepGMCMRO2_roomair.lm)
DeepGMCMRO2_roomair.lm.summary = CMRO2_roomair.lm.summary
CMRO2_roomair.predict <- ggpredict(DeepGMCMRO2_roomair.lm, terms=c("roomair"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_roomair.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_roomair.lm.summary$coefficients[4,4],2)))
DeepGMCMRO2_roomair_plot <- ggplot() + geom_point(data = alldata, aes(x = roomair, y = Deep_GM_CMRO2))  +
  geom_smooth(data=alldata, aes(x = roomair, y = Deep_GM_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_roomair.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_roomair.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_roomair.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_roomair.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=37, y=60, label=paste("Adj R Sq = ", round(CMRO2_roomair.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "Deep GM CMRO2 \n (Î¼mol/100g/min)", x = "")+
theme_minimalism()

CerebellumCMRO2_roomair.lm <- lm(Cerebellum_CMRO2 ~ PMA + GA + roomair, data=alldata)
CMRO2_roomair.lm.summary <- summary(CerebellumCMRO2_roomair.lm)
CerebellumCMRO2_roomair.lm.summary = CMRO2_roomair.lm.summary
CMRO2_roomair.predict <- ggpredict(CerebellumCMRO2_roomair.lm, terms=c("roomair"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_roomair.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_roomair.lm.summary$coefficients[4,4],2)))
CerebellumCMRO2_roomair_plot <- ggplot() + geom_point(data = alldata, aes(x = roomair, y = Cerebellum_CMRO2))  +
  geom_smooth(data=alldata, aes(x = roomair, y = Cerebellum_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_roomair.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_roomair.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_roomair.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_roomair.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=37, y=62, label=paste("Adj R Sq = ", round(CMRO2_roomair.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "Cerebellum CMRO2 \n (Î¼mol/100g/min)", x = "")+
theme_minimalism()

BrainstemCMRO2_roomair.lm <- lm(Brain_Stem_CMRO2 ~ PMA + GA + roomair, data=alldata)
CMRO2_roomair.lm.summary <- summary(BrainstemCMRO2_roomair.lm)
BrainstemCMRO2_roomair.lm.summary = CMRO2_roomair.lm.summary
CMRO2_roomair.predict <- ggpredict(BrainstemCMRO2_roomair.lm, terms=c("roomair"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_roomair.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_roomair.lm.summary$coefficients[4,4],2)))
BrainstemCMRO2_roomair_plot <- ggplot() + geom_point(data = alldata, aes(x = roomair, y = Brain_Stem_CMRO2))  +
  geom_smooth(data=alldata, aes(x = roomair, y = Brain_Stem_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_roomair.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_roomair.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_roomair.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_roomair.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=37, y=80, label=paste("Adj R Sq = ", round(CMRO2_roomair.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "Brainstem CMRO2 \n (Î¼mol/100g/min)", x = "Room Air (Days)")+
theme_minimalism()

HipandamygCMRO2_roomair.lm <- lm(Hip_and_Amyg_CMRO2 ~ PMA + GA + roomair, data=alldata)
CMRO2_roomair.lm.summary <- summary(HipandamygCMRO2_roomair.lm)
HipandamygCMRO2_roomair.lm.summary = CMRO2_roomair.lm.summary
CMRO2_roomair.predict <- ggpredict(HipandamygCMRO2_roomair.lm, terms=c("roomair"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_roomair.lm.summary$coefficients[4,4], 4) < 0.05, "p < 0.05", paste("p = ", round(CMRO2_roomair.lm.summary$coefficients[4,4],2)))
HipandAmygCMRO2_roomair_plot <- ggplot() + geom_point(data = alldata, aes(x = roomair, y = Hip_and_Amyg_CMRO2))  +
  geom_smooth(data=alldata, aes(x = roomair, y = Hip_and_Amyg_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_roomair.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_roomair.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_roomair.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_roomair.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=37, y=60, label=paste("Adj R Sq = ", round(CMRO2_roomair.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "Hip and Amyg CMRO2 \n (Î¼mol/100g/min)", x = "")+
theme_minimalism()

(CMRO2_v_roomair_patch <- GMCMRO2_roomair_plot + WMCMRO2_roomair_plot + DeepGMCMRO2_roomair_plot + CerebellumCMRO2_roomair_plot + BrainstemCMRO2_roomair_plot + HipandAmygCMRO2_roomair_plot)
```

# CMRO2 ~ Total Vent

```{r, echo=FALSE, message=F, warning=F}
CMRO2_Vent.lm <- lm(GM_CMRO2 ~ PMA + GA + Total_vent, data=alldata)
CMRO2_Vent.lm.summary <- summary(CMRO2_Vent.lm)
CMRO2_Vent.predict <- ggpredict(CMRO2_Vent.lm, terms=c("Total_vent"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Vent.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Vent.lm.summary$coefficients[4,4],2)))
GMCMRO2_AllVent_plot <- ggplot() + geom_point(data = alldata, aes(x = Total_vent, y = GM_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Total_vent, y = GM_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Vent.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Vent.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Vent.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Vent.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=25, y=50, label=paste("Adj R Sq = ", round(CMRO2_Vent.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "GM CMRO2 \n (Î¼mol/100g/min)", x = "")+
theme_minimalism()

CMRO2_Vent.lm <- lm(WM_CMRO2 ~ PMA + GA + Total_vent, data=alldata)
CMRO2_Vent.lm.summary <- summary(CMRO2_Vent.lm)
CMRO2_Vent.predict <- ggpredict(CMRO2_Vent.lm, terms=c("Total_vent"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Vent.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Vent.lm.summary$coefficients[4,4],2)))
WMCMRO2_AllVent_plot <- ggplot() + geom_point(data = alldata, aes(x = Total_vent, y = WM_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Total_vent, y = WM_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Vent.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Vent.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Vent.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Vent.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=25, y=38, label=paste("Adj R Sq = ", round(CMRO2_Vent.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "WM CMRO2 \n (Î¼mol/100g/min)", x = "")+
theme_minimalism()

CMRO2_Vent.lm <- lm(Deep_GM_CMRO2 ~ PMA + GA + Total_vent, data=alldata)
CMRO2_Vent.lm.summary <- summary(CMRO2_Vent.lm)
CMRO2_Vent.predict <- ggpredict(CMRO2_Vent.lm, terms=c("Total_vent"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Vent.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Vent.lm.summary$coefficients[4,4],2)))
DeepGMCMRO2_AllVent_plot <- ggplot() + geom_point(data = alldata, aes(x = Total_vent, y = Deep_GM_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Total_vent, y = Deep_GM_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Vent.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Vent.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Vent.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Vent.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=25, y=71, label=paste("Adj R Sq = ", round(CMRO2_Vent.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "Deep GM CMRO2 \n (Î¼mol/100g/min)", x = "")+ylim(14,72)+
theme_minimalism()

CMRO2_Vent.lm <- lm(Cerebellum_CMRO2 ~ PMA + GA + Total_vent, data=alldata)
CMRO2_Vent.lm.summary <- summary(CMRO2_Vent.lm)
CMRO2_Vent.predict <- ggpredict(CMRO2_Vent.lm, terms=c("Total_vent"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Vent.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Vent.lm.summary$coefficients[4,4],2)))
CerebellumCMRO2_AllVent_plot <- ggplot() + geom_point(data = alldata, aes(x = Total_vent, y = Cerebellum_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Total_vent, y = Cerebellum_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Vent.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Vent.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Vent.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Vent.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=25, y=80, label=paste("Adj R Sq = ", round(CMRO2_Vent.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "Cerebellum CMRO2 \n (Î¼mol/100g/min)", x = "")+
theme_minimalism()

CMRO2_Vent.lm <- lm(Brain_Stem_CMRO2 ~ PMA + GA + Total_vent, data=alldata)
CMRO2_Vent.lm.summary <- summary(CMRO2_Vent.lm)
CMRO2_Vent.predict <- ggpredict(CMRO2_Vent.lm, terms=c("Total_vent"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Vent.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Vent.lm.summary$coefficients[4,4],2)))
BrainstemCMRO2_AllVent_plot <- ggplot() + geom_point(data = alldata, aes(x = Total_vent, y = Brain_Stem_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Total_vent, y = Brain_Stem_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Vent.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Vent.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Vent.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Vent.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=25, y=110, label=paste("Adj R Sq = ", round(CMRO2_Vent.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "Brainstem CMRO2 \n (Î¼mol/100g/min)", x = "Sum of All Categories (Days)")+
theme_minimalism()

CMRO2_Vent.lm <- lm(Hip_and_Amyg_CMRO2 ~ PMA + GA + Total_vent, data=alldata)
CMRO2_Vent.lm.summary <- summary(CMRO2_Vent.lm)
CMRO2_Vent.predict <- ggpredict(CMRO2_Vent.lm, terms=c("Total_vent"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Vent.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Vent.lm.summary$coefficients[4,4],2)))
HipandAmygCMRO2_AllVent_plot <- ggplot() + geom_point(data = alldata, aes(x = Total_vent, y = Hip_and_Amyg_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Total_vent, y = Hip_and_Amyg_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Vent.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Vent.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Vent.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Vent.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=25, y=76, label=paste("Adj R Sq = ", round(CMRO2_Vent.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "Hip and Amyg CMRO2 \n (Î¼mol/100g/min)", x = "")+
theme_minimalism()

(CMRO2_v_AllVent_patch <- GMCMRO2_AllVent_plot + WMCMRO2_AllVent_plot + DeepGMCMRO2_AllVent_plot + CerebellumCMRO2_AllVent_plot + BrainstemCMRO2_AllVent_plot + HipandAmygCMRO2_AllVent_plot)
```

# CMRO2 ~ Porportion of days on ventilation

```{r, echo=FALSE, message=F, warning=F}
GMCMRO2_Vent_P.lm <- lm(GM_CMRO2 ~ PMA + GA + Vent_P, data=alldata)
CMRO2_Vent_P.lm.summary <- summary(GMCMRO2_Vent_P.lm)
GMCMRO2_Vent_P.lm.summary = CMRO2_Vent_P.lm.summary
CMRO2_Vent_P.predict <- ggpredict(GMCMRO2_Vent_P.lm, terms=c("Vent_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Vent_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Vent_P.lm.summary$coefficients[4,4],2)))
GMCMRO2_VentP_plot <- ggplot() + geom_point(data = alldata, aes(x = Vent_P, y = GM_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Vent_P, y = GM_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Vent_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Vent_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Vent_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Vent_P.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=0.35, y=44, label=paste("Adj R Sq = ", round(CMRO2_Vent_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "Brainstem CMRO2 \n (Î¼mol/100g/min)", x = "")+ylim(9,46)+
theme_minimalism()

WMCMRO2_Vent_P.lm <- lm(WM_CMRO2 ~ PMA + GA + Vent_P, data=alldata)
CMRO2_Vent_P.lm.summary <- summary(WMCMRO2_Vent_P.lm)
WMCMRO2_Vent_P.lm.summary = CMRO2_Vent_P.lm.summary
CMRO2_Vent_P.predict <- ggpredict(WMCMRO2_Vent_P.lm, terms=c("Vent_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Vent_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Vent_P.lm.summary$coefficients[4,4],2)))
WMCMRO2_VentP_plot <- ggplot() + geom_point(data = alldata, aes(x = Vent_P, y = WM_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Vent_P, y = WM_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Vent_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Vent_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Vent_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Vent_P.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=0.35, y=31, label=paste("Adj R Sq = ", round(CMRO2_Vent_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "Brainstem CMRO2 \n (Î¼mol/100g/min)", x = "")+
theme_minimalism()

DeepGMCMRO2_Vent_P.lm <- lm(Deep_GM_CMRO2 ~ PMA + GA + Vent_P, data=alldata)
CMRO2_Vent_P.lm.summary <- summary(DeepGMCMRO2_Vent_P.lm)
DeepGMCMRO2_Vent_P.lm.summary = CMRO2_Vent_P.lm.summary
CMRO2_Vent_P.predict <- ggpredict(DeepGMCMRO2_Vent_P.lm, terms=c("Vent_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Vent_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Vent_P.lm.summary$coefficients[4,4],2)))
DeepGMCMRO2_VentP_plot <- ggplot() + geom_point(data = alldata, aes(x = Vent_P, y = Deep_GM_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Vent_P, y = Deep_GM_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Vent_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Vent_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Vent_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Vent_P.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=0.35, y=60, label=paste("Adj R Sq = ", round(CMRO2_Vent_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "Brainstem CMRO2 \n (Î¼mol/100g/min)", x = "")+
theme_minimalism()

CerebellumCMRO2_Vent_P.lm <- lm(Cerebellum_CMRO2 ~ PMA + GA + Vent_P, data=alldata)
CMRO2_Vent_P.lm.summary <- summary(CerebellumCMRO2_Vent_P.lm)
CerebellumCMRO2_Vent_P.lm.summary = CMRO2_Vent_P.lm.summary
CMRO2_Vent_P.predict <- ggpredict(CerebellumCMRO2_Vent_P.lm, terms=c("Vent_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Vent_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Vent_P.lm.summary$coefficients[4,4],2)))
CerebellumCMRO2_VentP_plot <- ggplot() + geom_point(data = alldata, aes(x = Vent_P, y = Cerebellum_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Vent_P, y = Cerebellum_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Vent_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Vent_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Vent_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Vent_P.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=0.35, y=65, label=paste("Adj R Sq = ", round(CMRO2_Vent_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "Brainstem CMRO2 \n (Î¼mol/100g/min)", x = "")+
theme_minimalism()

BrainstemCMRO2_Vent_P.lm <- lm(Brain_Stem_CMRO2 ~ PMA + GA + Vent_P, data=alldata)
CMRO2_Vent_P.lm.summary <- summary(BrainstemCMRO2_Vent_P.lm)
BrainstemCMRO2_Vent_P.lm.summary = CMRO2_Vent_P.lm.summary
CMRO2_Vent_P.predict <- ggpredict(BrainstemCMRO2_Vent_P.lm, terms=c("Vent_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Vent_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Vent_P.lm.summary$coefficients[4,4],2)))
BrainstemCMRO2_VentP_plot <- ggplot() + geom_point(data = alldata, aes(x = Vent_P, y = Brain_Stem_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Vent_P, y = Brain_Stem_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Vent_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Vent_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Vent_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Vent_P.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=0.35, y=82, label=paste("Adj R Sq = ", round(CMRO2_Vent_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "Brainstem CMRO2 \n (Î¼mol/100g/min)", x = "Proportion of Time on All Categories")+
theme_minimalism()

HipandamygCMRO2_Vent_P.lm <- lm(Hip_and_Amyg_CMRO2 ~ PMA + GA + Vent_P, data=alldata)
CMRO2_Vent_P.lm.summary <- summary(HipandamygCMRO2_Vent_P.lm)
HipandamygCMRO2_Vent_P.lm.summary = CMRO2_Vent_P.lm.summary
CMRO2_Vent_P.predict <- ggpredict(HipandamygCMRO2_Vent_P.lm, terms=c("Vent_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_Vent_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_Vent_P.lm.summary$coefficients[4,4],2)))
HipandAmygCMRO2_VentP_plot <- ggplot() + geom_point(data = alldata, aes(x = Vent_P, y = Hip_and_Amyg_CMRO2))  +
  geom_smooth(data=alldata, aes(x = Vent_P, y = Hip_and_Amyg_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_Vent_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_Vent_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Vent_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_Vent_P.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=0.35, y=60, label=paste("Adj R Sq = ", round(CMRO2_Vent_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "Brainstem CMRO2 \n (Î¼mol/100g/min)", x = "")+
theme_minimalism()

(CMRO2_v_PropVent_patch <- GMCMRO2_VentP_plot + WMCMRO2_VentP_plot + DeepGMCMRO2_VentP_plot + CerebellumCMRO2_VentP_plot + BrainstemCMRO2_VentP_plot + HipandAmygCMRO2_VentP_plot)
```

# CMRO2 ~ Percent of days on invasive ventilation

```{r, echo=FALSE, message=F, warning=F}
CMRO2_IN_P.lm <- lm(GM_CMRO2 ~ PMA + GA + IN_P , data=alldata)
CMRO2_IN_P.lm.summary <- summary(CMRO2_IN_P.lm)
CMRO2_IN_P.predict <- ggpredict(CMRO2_IN_P.lm, terms=c("IN_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_IN_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_IN_P.lm.summary$coefficients[4,4],2)))
GMCMRO2_PercentInv_plot <- ggplot() + geom_point(data = alldata, aes(x = IN_P, y = GM_CMRO2))  +
  geom_smooth(data=alldata, aes(x = IN_P, y = GM_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_IN_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_IN_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_IN_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_IN_P.predict, aes(x,predicted), color="blue")+
  labs(y= "GM CMRO2 \n (Î¼mol/100g/min)", x = "")+ylim(8,51)+
  annotate(geom="text", x=0.1, y=50, label=paste("Adj R Sq = ", round(CMRO2_IN_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CMRO2_IN_P.lm <- lm(WM_CMRO2 ~ PMA + GA + IN_P , data=alldata)
CMRO2_IN_P.lm.summary <- summary(CMRO2_IN_P.lm)
CMRO2_IN_P.predict <- ggpredict(CMRO2_IN_P.lm, terms=c("IN_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_IN_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_IN_P.lm.summary$coefficients[4,4],2)))
WMCMRO2_PercentInv_plot <- ggplot() + geom_point(data = alldata, aes(x = IN_P, y = WM_CMRO2))  +
  geom_smooth(data=alldata, aes(x = IN_P, y = WM_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_IN_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_IN_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_IN_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_IN_P.predict, aes(x,predicted), color="blue")+
  labs(y= "WM CMRO2 \n (Î¼mol/100g/min)", x = "")+ylim(8,41)+
  annotate(geom="text", x=0.1, y=40, label=paste("Adj R Sq = ", round(CMRO2_IN_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CMRO2_IN_P.lm <- lm(Deep_GM_CMRO2 ~ PMA + GA + IN_P , data=alldata)
CMRO2_IN_P.lm.summary <- summary(CMRO2_IN_P.lm)
CMRO2_IN_P.predict <- ggpredict(CMRO2_IN_P.lm, terms=c("IN_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_IN_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_IN_P.lm.summary$coefficients[4,4],2)))
DeepGMCMRO2_PercentInv_plot <- ggplot() + geom_point(data = alldata, aes(x = IN_P, y = Deep_GM_CMRO2))  +
  geom_smooth(data=alldata, aes(x = IN_P, y = Deep_GM_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_IN_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_IN_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_IN_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_IN_P.predict, aes(x,predicted), color="blue")+
  labs(y= "Deep GM CMRO2 \n (Î¼mol/100g/min)", x = "")+ylim(8,71)+
  annotate(geom="text", x=0.1, y=70, label=paste("Adj R Sq = ", round(CMRO2_IN_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CMRO2_IN_P.lm <- lm(Cerebellum_CMRO2 ~ PMA + GA + IN_P , data=alldata)
CMRO2_IN_P.lm.summary <- summary(CMRO2_IN_P.lm)
CMRO2_IN_P.predict <- ggpredict(CMRO2_IN_P.lm, terms=c("IN_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_IN_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_IN_P.lm.summary$coefficients[4,4],2)))
CerebellumCMRO2_PercentInv_plot <- ggplot() + geom_point(data = alldata, aes(x = IN_P, y = Cerebellum_CMRO2))  +
  geom_smooth(data=alldata, aes(x = IN_P, y = Cerebellum_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_IN_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_IN_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_IN_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_IN_P.predict, aes(x,predicted), color="blue")+
  labs(y= "Cerebellum CMRO2 \n (Î¼mol/100g/min)", x = "")+ylim(15,81)+
  annotate(geom="text", x=0.1, y=80, label=paste("Adj R Sq = ", round(CMRO2_IN_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CMRO2_IN_P.lm <- lm(Brain_Stem_CMRO2 ~ PMA + GA + IN_P , data=alldata)
CMRO2_IN_P.lm.summary <- summary(CMRO2_IN_P.lm)
CMRO2_IN_P.predict <- ggpredict(CMRO2_IN_P.lm, terms=c("IN_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_IN_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_IN_P.lm.summary$coefficients[4,4],2)))
BrainstemCMRO2_PercentInv_plot <- ggplot() + geom_point(data = alldata, aes(x = IN_P, y = Brain_Stem_CMRO2))  +
  geom_smooth(data=alldata, aes(x = IN_P, y = Brain_Stem_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_IN_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_IN_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_IN_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_IN_P.predict, aes(x,predicted), color="blue")+
  labs(y= "Brain Stem CMRO2 \n (Î¼mol/100g/min)", x = "Percentage of Time on Category 1")+
  annotate(geom="text", x=0.1, y=99, label=paste("Adj R Sq = ", round(CMRO2_IN_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "Brainstem CBF (ml/100g/min)", x = "")+ylim(20,101)+
theme_minimalism()

CMRO2_IN_P.lm <- lm(Hip_and_Amyg_CMRO2 ~ PMA + GA + IN_P , data=alldata)
CMRO2_IN_P.lm.summary <- summary(CMRO2_IN_P.lm)
CMRO2_IN_P.predict <- ggpredict(CMRO2_IN_P.lm, terms=c("IN_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_IN_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_IN_P.lm.summary$coefficients[4,4],2)))
HipandAmygCMRO2_PercentInv_plot <- ggplot() + geom_point(data = alldata, aes(x = IN_P, y = Hip_and_Amyg_CMRO2))  +
  geom_smooth(data=alldata, aes(x = IN_P, y = Hip_and_Amyg_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_IN_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_IN_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_IN_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_IN_P.predict, aes(x,predicted), color="blue")+
  labs(y= "Hip and Amyg CMRO2 \n (Î¼mol/100g/min)", x = "")+ylim(15,72)+
  annotate(geom="text", x=0.1, y=70, label=paste("Adj R Sq = ", round(CMRO2_IN_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

(CMRO2_v_PropInv_patch <- GMCMRO2_PercentInv_plot + WMCMRO2_PercentInv_plot + DeepGMCMRO2_PercentInv_plot + CerebellumCMRO2_PercentInv_plot + BrainstemCMRO2_PercentInv_plot + HipandAmygCMRO2_PercentInv_plot)
```

# CMRO2 ~ Percent of Days on Noninvasive Ventilation

```{r, echo=FALSE, message=F, warning=F}
CMRO2_NI_P.lm <- lm(GM_CMRO2 ~ PMA + GA + NI_P , data=alldata)
CMRO2_NI_P.lm.summary <- summary(CMRO2_NI_P.lm)
CMRO2_NI_P.predict <- ggpredict(CMRO2_NI_P.lm, terms=c("NI_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_NI_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_NI_P.lm.summary$coefficients[4,4],2)))
GMCMRO2_PercentNonInv_plot <- ggplot() + geom_point(data = alldata, aes(x = NI_P, y = GM_CMRO2))  +
  geom_smooth(data=alldata, aes(x = NI_P, y = GM_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_NI_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_NI_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_NI_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_NI_P.predict, aes(x,predicted), color="blue")+
  labs(y= "GM CMRO2 \n (Î¼mol/100g/min)", x = "")+ylim(8,51)+
  annotate(geom="text", x=0.12, y=50, label=paste("Adj R Sq = ", round(CMRO2_NI_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CMRO2_NI_P.lm <- lm(WM_CMRO2 ~ PMA + GA + NI_P , data=alldata)
CMRO2_NI_P.lm.summary <- summary(CMRO2_NI_P.lm)
CMRO2_NI_P.predict <- ggpredict(CMRO2_NI_P.lm, terms=c("NI_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_NI_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_NI_P.lm.summary$coefficients[4,4],2)))
WMCMRO2_PercentNonInv_plot <- ggplot() + geom_point(data = alldata, aes(x = NI_P, y = WM_CMRO2))  +
  geom_smooth(data=alldata, aes(x = NI_P, y = WM_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_NI_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_NI_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_NI_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_NI_P.predict, aes(x,predicted), color="blue")+
  labs(y= "WM CMRO2 \n (Î¼mol/100g/min)", x = "")+ylim(8,39)+
  annotate(geom="text", x=0.12, y=38, label=paste("Adj R Sq = ", round(CMRO2_NI_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CMRO2_NI_P.lm <- lm(Deep_GM_CMRO2 ~ PMA + GA + NI_P , data=alldata)
CMRO2_NI_P.lm.summary <- summary(CMRO2_NI_P.lm)
CMRO2_NI_P.predict <- ggpredict(CMRO2_NI_P.lm, terms=c("NI_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_NI_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_NI_P.lm.summary$coefficients[4,4],2)))
DeepGMCMRO2_PercentNonInv_plot <- ggplot() + geom_point(data = alldata, aes(x = NI_P, y = Deep_GM_CMRO2))  +
  geom_smooth(data=alldata, aes(x = NI_P, y = Deep_GM_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_NI_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_NI_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_NI_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_NI_P.predict, aes(x,predicted), color="blue")+
  labs(y= "Deep GM CMRO2 \n (Î¼mol/100g/min)", x = "")+ylim(10,73)+
  annotate(geom="text", x=0.12, y=72, label=paste("Adj R Sq = ", round(CMRO2_NI_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CMRO2_NI_P.lm <- lm(Cerebellum_CMRO2 ~ PMA + GA + NI_P , data=alldata)
CMRO2_NI_P.lm.summary <- summary(CMRO2_NI_P.lm)
CMRO2_NI_P.predict <- ggpredict(CMRO2_NI_P.lm, terms=c("NI_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_NI_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_NI_P.lm.summary$coefficients[4,4],2)))
CerebellumCMRO2_PercentNonInv_plot <- ggplot() + geom_point(data = alldata, aes(x = NI_P, y = Cerebellum_CMRO2))  +
  geom_smooth(data=alldata, aes(x = NI_P, y = Cerebellum_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_NI_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_NI_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_NI_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_NI_P.predict, aes(x,predicted), color="blue")+
  labs(y= "Cerebellum CMRO2 \n (Î¼mol/100g/min)", x = "")+ylim(15,82)+
  annotate(geom="text", x=0.12, y=80, label=paste("Adj R Sq = ", round(CMRO2_NI_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CMRO2_NI_P.lm <- lm(Brain_Stem_CMRO2 ~ PMA + GA + NI_P , data=alldata)
CMRO2_NI_P.lm.summary <- summary(CMRO2_NI_P.lm)
CMRO2_NI_P.predict <- ggpredict(CMRO2_NI_P.lm, terms=c("NI_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_NI_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_NI_P.lm.summary$coefficients[4,4],2)))
BrainstemCMRO2_PercentNonInv_plot <- ggplot() + geom_point(data = alldata, aes(x = NI_P, y = Brain_Stem_CMRO2))  +
  geom_smooth(data=alldata, aes(x = NI_P, y = Brain_Stem_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_NI_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_NI_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_NI_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_NI_P.predict, aes(x,predicted), color="blue")+
  labs(y= "Brainstem CMRO2 \n (Î¼mol/100g/min)", x = "Percentage of Time on Category 2")+ylim(10,97)+
  annotate(geom="text", x=0.12, y=95, label=paste("Adj R Sq = ", round(CMRO2_NI_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CMRO2_NI_P.lm <- lm(Hip_and_Amyg_CMRO2 ~ PMA + GA + NI_P , data=alldata)
CMRO2_NI_P.lm.summary <- summary(CMRO2_NI_P.lm)
CMRO2_NI_P.predict <- ggpredict(CMRO2_NI_P.lm, terms=c("NI_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_NI_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_NI_P.lm.summary$coefficients[4,4],2)))
HipandAmygCMRO2_PercentNonInv_plot <- ggplot() + geom_point(data = alldata, aes(x = NI_P, y = Hip_and_Amyg_CMRO2))  +
  geom_smooth(data=alldata, aes(x = NI_P, y = Hip_and_Amyg_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_NI_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_NI_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_NI_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_NI_P.predict, aes(x,predicted), color="blue")+
  labs(y= "Hip and Amyg CMRO2 \n (Î¼mol/100g/min)", x = "")+ylim(10,77)+
  annotate(geom="text", x=0.12, y=75, label=paste("Adj R Sq = ", round(CMRO2_NI_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

(CMRO2_v_PropNonInv_patch <- GMCMRO2_PercentNonInv_plot + WMCMRO2_PercentNonInv_plot + DeepGMCMRO2_PercentNonInv_plot + CerebellumCMRO2_PercentNonInv_plot + BrainstemCMRO2_PercentNonInv_plot + HipandAmygCMRO2_PercentNonInv_plot)
```

# CMRO2 ~ Percent of Days on Less Invasive Ventilation

```{r, echo=FALSE, message=F, warning=F}
CMRO2_LI_P.lm <- lm(GM_CMRO2 ~ PMA + GA + LI_P , data=alldata)
CMRO2_LI_P.lm.summary <- summary(CMRO2_LI_P.lm)
CMRO2_LI_P.predict <- ggpredict(CMRO2_LI_P.lm, terms=c("LI_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_LI_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_LI_P.lm.summary$coefficients[4,4],2)))
GMCMRO2_LessInvasive_plot <- ggplot() + geom_point(data = alldata, aes(x = LI_P, y = GM_CMRO2))  +
  geom_smooth(data=alldata, aes(x = LI_P, y = GM_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_LI_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_LI_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_LI_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_LI_P.predict, aes(x,predicted), color="blue")+
  labs(y= "GM CMRO2 \n (Î¼mol/100g/min)", x = "")+ylim(9,45)+
  annotate(geom="text", x=0.4, y=43, label=paste("Adj R Sq = ", round(CMRO2_LI_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CMRO2_LI_P.lm <- lm(WM_CMRO2 ~ PMA + GA + LI_P , data=alldata)
CMRO2_LI_P.lm.summary <- summary(CMRO2_LI_P.lm)
CMRO2_LI_P.predict <- ggpredict(CMRO2_LI_P.lm, terms=c("LI_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_LI_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_LI_P.lm.summary$coefficients[4,4],2)))
WMCMRO2_LessInvasive_plot <- ggplot() + geom_point(data = alldata, aes(x = LI_P, y = WM_CMRO2))  +
  geom_smooth(data=alldata, aes(x = LI_P, y = WM_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_LI_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_LI_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_LI_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_LI_P.predict, aes(x,predicted), color="blue")+
  labs(y= "WM CMRO2 \n (Î¼mol/100g/min)", x = "")+ylim(8,36)+
  annotate(geom="text", x=0.4, y=35, label=paste("Adj R Sq = ", round(CMRO2_LI_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CMRO2_LI_P.lm <- lm(Deep_GM_CMRO2 ~ PMA + GA + LI_P , data=alldata)
CMRO2_LI_P.lm.summary <- summary(CMRO2_LI_P.lm)
CMRO2_LI_P.predict <- ggpredict(CMRO2_LI_P.lm, terms=c("LI_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_LI_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_LI_P.lm.summary$coefficients[4,4],2)))
DeepGMCMRO2_LessInvasive_plot <- ggplot() + geom_point(data = alldata, aes(x = LI_P, y = Deep_GM_CMRO2))  +
  geom_smooth(data=alldata, aes(x = LI_P, y = Deep_GM_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_LI_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_LI_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_LI_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_LI_P.predict, aes(x,predicted), color="blue")+
  labs(y= "Deep GM CMRO2 \n (Î¼mol/100g/min)", x = "")+
  annotate(geom="text", x=0.4, y=60, label=paste("Adj R Sq = ", round(CMRO2_LI_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CMRO2_LI_P.lm <- lm(Cerebellum_CMRO2 ~ PMA + GA + LI_P , data=alldata)
CMRO2_LI_P.lm.summary <- summary(CMRO2_LI_P.lm)
CMRO2_LI_P.predict <- ggpredict(CMRO2_LI_P.lm, terms=c("LI_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_LI_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_LI_P.lm.summary$coefficients[4,4],2)))
CerebellumCMRO2_LessInvasive_plot <- ggplot() + geom_point(data = alldata, aes(x = LI_P, y = Cerebellum_CMRO2))  +
  geom_smooth(data=alldata, aes(x = LI_P, y = Cerebellum_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_LI_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_LI_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_LI_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_LI_P.predict, aes(x,predicted), color="blue")+
  labs(y= "Cerebellum CMRO2 \n (Î¼mol/100g/min)", x = "")+
  annotate(geom="text", x=0.4, y=68, label=paste("Adj R Sq = ", round(CMRO2_LI_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CMRO2_LI_P.lm <- lm(Brain_Stem_CMRO2 ~ PMA + GA + LI_P , data=alldata)
CMRO2_LI_P.lm.summary <- summary(CMRO2_LI_P.lm)
CMRO2_LI_P.predict <- ggpredict(CMRO2_LI_P.lm, terms=c("LI_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_LI_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_LI_P.lm.summary$coefficients[4,4],2)))
BrainstemCMRO2_LessInvasive_plot <- ggplot() + geom_point(data = alldata, aes(x = LI_P, y = Brain_Stem_CMRO2))  +
  geom_smooth(data=alldata, aes(x = LI_P, y = Brain_Stem_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_LI_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_LI_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_LI_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_LI_P.predict, aes(x,predicted), color="blue")+
  labs(y= "Brain Stem CMRO2 \n (Î¼mol/100g/min)", x = "Percentage of Days on Category 3")+
  annotate(geom="text", x=0.4, y=84, label=paste("Adj R Sq = ", round(CMRO2_LI_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

CMRO2_LI_P.lm <- lm(Hip_and_Amyg_CMRO2 ~ PMA + GA + LI_P , data=alldata)
CMRO2_LI_P.lm.summary <- summary(CMRO2_LI_P.lm)
CMRO2_LI_P.predict <- ggpredict(CMRO2_LI_P.lm, terms=c("LI_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CMRO2_LI_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CMRO2_LI_P.lm.summary$coefficients[4,4],2)))
HipandAmygCMRO2_LessInvasive_plot <- ggplot() + geom_point(data = alldata, aes(x = LI_P, y = Hip_and_Amyg_CMRO2))  +
  geom_smooth(data=alldata, aes(x = LI_P, y = Hip_and_Amyg_CMRO2), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CMRO2_LI_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CMRO2_LI_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_LI_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CMRO2_LI_P.predict, aes(x,predicted), color="blue")+
  labs(y= "Hip and Amyg CMRO2 \n (Î¼mol/100g/min)", x = "")+
  annotate(geom="text", x=0.4, y=63, label=paste("Adj R Sq = ", round(CMRO2_LI_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()

(CMRO2_v_PropLessInv_patch <- GMCMRO2_LessInvasive_plot + WMCMRO2_LessInvasive_plot + DeepGMCMRO2_LessInvasive_plot + CerebellumCMRO2_LessInvasive_plot + BrainstemCMRO2_LessInvasive_plot + HipandAmygCMRO2_LessInvasive_plot)
```

# Patchwork Plots

## Proportion

```{r}
#| label: proportion
#| fig-width: 15
#| fig-height: 15
(CBFandCMRO2_v_ProportionVent <- CBF_v_VentPerc_patch / CMRO2_v_PropVent_patch + plot_annotation(tag_levels = 'A') & theme(plot.tag = element_text(size = 15)))
```
```{r}
ggsave('CBFandCMRO2vProportionVent.png', width=15, height=15, units="in", dpi=300)
```

## Category 2

```{r}
#| label: cat2
#| fig-width: 15
#| fig-height: 15

(CBFandCMRO2_v_Category2 <- CBF_v_NonInvasive_patch / CMRO2_v_NonInvasive_patch + plot_annotation(tag_levels = 'A') & theme(plot.tag = element_text(size = 15)))
```
```{r}
ggsave('CBFandCMRO2vCategory2.png', width=15, height=15, units="in", dpi=300)
```

## Roomair

```{r}
#| label: roomair
#| fig-width: 15
#| fig-height: 15
(CBFandCMRO2_v_Roomair <- CBF_v_Roomair_patch / CMRO2_v_roomair_patch + plot_annotation(tag_levels = 'A') & theme(plot.tag = element_text(size = 15)))

```

```{r}
ggsave('CBFandCMRO2vRoomair.png', width=15, height=15, units="in", dpi=300)
```

# CSVO2

```{r, echo=FALSE, message=F, warning=F}
CSvO2_Invasive.lm <- lm(CSvO2_P ~ PMA + GA + Invasive , data=alldata)
CSvO2_Invasive.lm.summary <- summary(CSvO2_Invasive.lm)
CSvO2_Invasive.predict <- ggpredict(CSvO2_Invasive.lm, terms=c("Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CSvO2_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CSvO2_Invasive.lm.summary$coefficients[4,4],2)))
ggplot() + geom_point(data = alldata, aes(x = Invasive, y = CSvO2_P))  +
  geom_smooth(data=alldata, aes(x = Invasive, y = CSvO2_P), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CSvO2_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CSvO2_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CSvO2_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CSvO2_Invasive.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=5, y=71, label=paste("Adj R Sq = ", round(CSvO2_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "CSvO2 (%)", x = "Category 1 (Days)")+
theme_minimalism()
```

```{r, echo=FALSE, message=F, warning=F}
CSvO2_Noninvasive.lm <- lm(CSvO2_P ~ PMA + GA + Noninvasive , data=alldata)
CSvO2_Noninvasive.lm.summary <- summary(CSvO2_Noninvasive.lm)
CSvO2_Noninvasive.predict <- ggpredict(CSvO2_Noninvasive.lm, terms=c("Noninvasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CSvO2_Noninvasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CSvO2_Noninvasive.lm.summary$coefficients[4,4],2)))
ggplot() + geom_point(data = alldata, aes(x = Noninvasive, y = CSvO2_P))  +
  geom_smooth(data=alldata, aes(x = Noninvasive, y = CSvO2_P), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CSvO2_Noninvasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CSvO2_Noninvasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CSvO2_Noninvasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CSvO2_Noninvasive.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=12, y=72, label=paste("Adj R Sq = ", round(CSvO2_Noninvasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "CSvO2 (%)", x = "Category 2 (Days)")+
theme_minimalism()
```

```{r, echo=FALSE, message=F, warning=F}
CSvO2_Less_Invasive.lm <- lm(CSvO2_P ~ PMA + GA + Less_Invasive , data=alldata)
CSvO2_Less_Invasive.lm.summary <- summary(CSvO2_Less_Invasive.lm)
CSvO2_Less_Invasive.predict <- ggpredict(CSvO2_Less_Invasive.lm, terms=c("Less_Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CSvO2_Less_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CSvO2_Less_Invasive.lm.summary$coefficients[4,4],2)))
ggplot() + geom_point(data = alldata, aes(x = Less_Invasive, y = CSvO2_P))  +
  geom_smooth(data=alldata, aes(x = Less_Invasive, y = CSvO2_P), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CSvO2_Less_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CSvO2_Less_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CSvO2_Less_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CSvO2_Less_Invasive.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=5, y=72, label=paste("Adj R Sq = ", round(CSvO2_Less_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "CSvO2 (%)", x = "Category 3 (Days)")+
theme_minimalism()
```

```{r, echo=FALSE, message=F, warning=F}
CSvO2_Vent_P.lm <- lm(CSvO2_P ~ PMA + GA + Vent_P , data=alldata)
CSvO2_Vent_P.lm.summary <- summary(CSvO2_Vent_P.lm)
CSvO2_Vent_P.predict <- ggpredict(CSvO2_Vent_P.lm, terms=c("Vent_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CSvO2_Vent_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CSvO2_Vent_P.lm.summary$coefficients[4,4],2)))
ggplot() + geom_point(data = alldata, aes(x = Vent_P, y = CSvO2_P))  +
  geom_smooth(data=alldata, aes(x = Vent_P, y = CSvO2_P), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CSvO2_Vent_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CSvO2_Vent_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CSvO2_Vent_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CSvO2_Vent_P.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=0.35, y=75, label=paste("Adj R Sq = ", round(CSvO2_Vent_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "CSvO2 (%)", x = "Proportion of Time on All Categories")+
theme_minimalism()
```

```{r, echo=FALSE, message=F, warning=F}
CSvO2_roomair.lm <- lm(CSvO2_P ~ PMA + GA + roomair , data=alldata)
CSvO2_roomair.lm.summary <- summary(CSvO2_roomair.lm)
CSvO2_roomair.predict <- ggpredict(CSvO2_roomair.lm, terms=c("roomair"), ci.lvl=0.95)
pvalue <- ifelse(round(CSvO2_roomair.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CSvO2_roomair.lm.summary$coefficients[4,4],2)))
ggplot() + geom_point(data = alldata, aes(x = roomair, y = CSvO2_P))  +
  geom_smooth(data=alldata, aes(x = roomair, y = CSvO2_P), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CSvO2_roomair.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CSvO2_roomair.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CSvO2_roomair.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CSvO2_roomair.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=7, y=71, label=paste("Adj R Sq = ", round(CSvO2_roomair.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "CSvO2 (%)", x = "Room Air (Days)")+
theme_minimalism()
```

# CSaO2

```{r, echo=FALSE, message=F, warning=F}
CSaO2_Invasive.lm <- lm(CSaO2_P ~ PMA + GA + Invasive , data=alldata)
CSaO2_Invasive.lm.summary <- summary(CSaO2_Invasive.lm)
CSaO2_Invasive.predict <- ggpredict(CSaO2_Invasive.lm, terms=c("Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CSaO2_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CSaO2_Invasive.lm.summary$coefficients[4,4],2)))
ggplot() + geom_point(data = alldata, aes(x = Invasive, y = CSaO2_P))  + 
  geom_smooth(data=alldata, aes(x = Invasive, y = CSaO2_P), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CSaO2_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CSaO2_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CSaO2_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CSaO2_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "CSaO2 (%)", x = "Category (Days)")+
  ylim(92, NA)+
  annotate(geom="text", x=5, y=102, label=paste("Adj R Sq = ", round(CSaO2_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()
```

```{r, echo=FALSE, message=F, warning=F}
CSaO2_Noninvasive.lm <- lm(CSaO2_P ~ PMA + GA + Noninvasive , data=alldata)
CSaO2_Noninvasive.lm.summary <- summary(CSaO2_Noninvasive.lm)
CSaO2_Noninvasive.predict <- ggpredict(CSaO2_Noninvasive.lm, terms=c("Noninvasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CSaO2_Noninvasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CSaO2_Noninvasive.lm.summary$coefficients[4,4],2)))
ggplot() + geom_point(data = alldata, aes(x = Noninvasive, y = CSaO2_P))  + 
  geom_smooth(data=alldata, aes(x = Noninvasive, y = CSaO2_P), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CSaO2_Noninvasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CSaO2_Noninvasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CSaO2_Noninvasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CSaO2_Noninvasive.predict, aes(x,predicted), color="blue")+
  labs(y= "CSaO2 (%)", x = "Category 2 (Days)")+
  ylim(92, NA)+
  annotate(geom="text", x=13, y=102, label=paste("Adj R Sq = ", round(CSaO2_Noninvasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()
```

```{r, echo=FALSE, message=F, warning=F}
CSaO2_LI.lm <- lm(CSaO2_P ~ PMA + GA + Less_Invasive , data=alldata)
CSaO2_LI.lm.summary <- summary(CSaO2_LI.lm)
CSaO2_LI.predict <- ggpredict(CSaO2_LI.lm, terms=c("Less_Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(CSaO2_LI.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CSaO2_LI.lm.summary$coefficients[4,4],2)))
ggplot() + geom_point(data = alldata, aes(x = Less_Invasive, y = CSaO2_P))  +
  geom_smooth(data=alldata, aes(x = Less_Invasive, y = CSaO2_P), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CSaO2_LI.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CSaO2_LI.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CSaO2_LI.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CSaO2_LI.predict, aes(x,predicted), color="blue")+
  labs(y= "CSaO2 (%)", x = "Category 3 (Days)")+ ylim(92, NA)+
  annotate(geom="text", x=5, y=101, label=paste("Adj R Sq = ", round(CSaO2_LI.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()
```

```{r, echo=FALSE, message=F, warning=F}
CSaO2_Vent_P.lm <- lm(CSaO2_P ~ PMA + GA + Vent_P , data=alldata)
CSaO2_Vent_P.lm.summary <- summary(CSaO2_Vent_P.lm)
CSaO2_Vent_P.predict <- ggpredict(CSaO2_Vent_P.lm, terms=c("Vent_P"), ci.lvl=0.95)
pvalue <- ifelse(round(CSaO2_Vent_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CSaO2_Vent_P.lm.summary$coefficients[4,4],2)))
ggplot() + geom_point(data = alldata, aes(x = Vent_P, y = CSaO2_P))  +
  geom_smooth(data=alldata, aes(x = Vent_P, y = CSaO2_P), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CSaO2_Vent_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CSaO2_Vent_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CSaO2_Vent_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CSaO2_Vent_P.predict, aes(x,predicted), color="blue")+
  labs(y= "CSaO2 (%)", x = "Proportion of Time on All Categories (Days)")+ ylim(92, NA)+
  annotate(geom="text", x=0.4, y=102, label=paste("Adj R Sq = ", round(CSaO2_Vent_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()
```

```{r, echo=FALSE, message=F, warning=F}
CSaO2_roomair.lm <- lm(CSaO2_P ~ PMA + GA + roomair , data=alldata)
CSaO2_roomair.lm.summary <- summary(CSaO2_roomair.lm)
CSaO2_roomair.predict <- ggpredict(CSaO2_roomair.lm, terms=c("roomair"), ci.lvl=0.95)
pvalue <- ifelse(round(CSaO2_roomair.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(CSaO2_roomair.lm.summary$coefficients[4,4],2)))
ggplot() + geom_point(data = alldata, aes(x = roomair, y = CSaO2_P))  +
  geom_smooth(data=alldata, aes(x = roomair, y = CSaO2_P), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=CSaO2_roomair.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=CSaO2_roomair.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=CSaO2_roomair.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=CSaO2_roomair.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=15, y=102, label=paste("Adj R Sq = ", round(CSaO2_roomair.lm.summary$adj.r.squared,2), "\n", pvalue))+
  labs(y= "CSaO2 (%)", x = "Room Air (Days)")+
theme_minimalism()
```

# Hct

```{r, echo=FALSE, message=F, warning=F}
Hct_P_Invasive.lm <- lm(Hct_P ~ PMA + GA + Invasive , data=alldata)
Hct_P_Invasive.lm.summary <- summary(Hct_P_Invasive.lm)
Hct_P_Invasive.predict <- ggpredict(Hct_P_Invasive.lm, terms=c("Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(Hct_P_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(Hct_P_Invasive.lm.summary$coefficients[4,4],2)))
ggplot() + geom_point(data = alldata, aes(x = Invasive, y = Hct_P))  +
  geom_smooth(data=alldata, aes(x = Invasive, y = Hct_P), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=Hct_P_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=Hct_P_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=Hct_P_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=Hct_P_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "Hct (%)", x = "Category 1 (Days)")+
  annotate(geom="text", x=5, y=40, label=paste("Adj R Sq = ", round(Hct_P_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()
```
```{r, echo=FALSE, message=F, warning=F}
Hct_P_Noninvasive.lm <- lm(Hct_P ~ PMA + GA + Noninvasive , data=alldata)
Hct_P_Noninvasive.lm.summary <- summary(Hct_P_Noninvasive.lm)
Hct_P_Noninvasive.predict <- ggpredict(Hct_P_Noninvasive.lm, terms=c("Noninvasive"), ci.lvl=0.95)
pvalue <- ifelse(round(Hct_P_Noninvasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(Hct_P_Noninvasive.lm.summary$coefficients[4,4],2)))
ggplot() + geom_point(data = alldata, aes(x = Noninvasive, y = Hct_P))  +
  geom_smooth(data=alldata, aes(x = Noninvasive, y = Hct_P), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=Hct_P_Noninvasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=Hct_P_Noninvasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=Hct_P_Noninvasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=Hct_P_Noninvasive.predict, aes(x,predicted), color="blue")+
  labs(y= "Hct (%)", x = "Category 2 (Days)")+
  annotate(geom="text", x=13, y=40, label=paste("Adj R Sq = ", round(Hct_P_Noninvasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()
```

```{r, echo=FALSE, message=F, warning=F}
Hct_P_Less_Invasive.lm <- lm(Hct_P ~ PMA + GA + Less_Invasive , data=alldata)
Hct_P_Less_Invasive.lm.summary <- summary(Hct_P_Less_Invasive.lm)
Hct_P_Less_Invasive.predict <- ggpredict(Hct_P_Less_Invasive.lm, terms=c("Less_Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(Hct_P_Less_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(Hct_P_Less_Invasive.lm.summary$coefficients[4,4],2)))
ggplot() + geom_point(data = alldata, aes(x = Less_Invasive, y = Hct_P))  +
  geom_smooth(data=alldata, aes(x = Less_Invasive, y = Hct_P), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=Hct_P_Less_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=Hct_P_Less_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=Hct_P_Less_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=Hct_P_Less_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "Hct (%)", x = "Category 3 (Days)")+
  annotate(geom="text", x=5, y=40, label=paste("Adj R Sq = ", round(Hct_P_Less_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()
```

```{r, echo=FALSE, message=F, warning=F}
Hct_P_Vent_P.lm <- lm(Hct_P ~ PMA + GA + Vent_P , data=alldata)
Hct_P_Vent_P.lm.summary <- summary(Hct_P_Vent_P.lm)
Hct_P_Vent_P.predict <- ggpredict(Hct_P_Vent_P.lm, terms=c("Vent_P"), ci.lvl=0.95)
pvalue <- ifelse(round(Hct_P_Vent_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(Hct_P_Vent_P.lm.summary$coefficients[4,4],2)))
ggplot() + geom_point(data = alldata, aes(x = Vent_P, y = Hct_P))  +
  geom_smooth(data=alldata, aes(x = Vent_P, y = Hct_P), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=Hct_P_Vent_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=Hct_P_Vent_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=Hct_P_Vent_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=Hct_P_Vent_P.predict, aes(x,predicted), color="blue")+
  labs(y= "Hct (%)", x = "Proportion of Time on All Categories")+
  annotate(geom="text", x=0.4, y=37, label=paste("Adj R Sq = ", round(Hct_P_Vent_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()
```

```{r, echo=FALSE, message=F, warning=F}
Hct_P_roomair.lm <- lm(Hct_P ~ PMA + GA + roomair , data=alldata)
Hct_P_roomair.lm.summary <- summary(Hct_P_roomair.lm)
Hct_P_roomair.predict <- ggpredict(Hct_P_roomair.lm, terms=c("roomair"), ci.lvl=0.95)
pvalue <- ifelse(round(Hct_P_roomair.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(Hct_P_roomair.lm.summary$coefficients[4,4],2)))
ggplot() + geom_point(data = alldata, aes(x = roomair, y = Hct_P))  +
  geom_smooth(data=alldata, aes(x = roomair, y = Hct_P), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=Hct_P_roomair.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=Hct_P_roomair.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=Hct_P_roomair.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=Hct_P_roomair.predict, aes(x,predicted), color="blue")+
  labs(y= "Hct (%)", x = "Room Air (Days)")+
  annotate(geom="text", x=7, y=40, label=paste("Adj R Sq = ", round(Hct_P_roomair.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()
```

# OEF

```{r, echo=FALSE, message=F, warning=F}
OEF_P_Invasive.lm <- lm(OEF_P ~ PMA + GA + Invasive , data=alldata)
OEF_P_Invasive.lm.summary <- summary(OEF_P_Invasive.lm)
OEF_P_Invasive.predict <- ggpredict(OEF_P_Invasive.lm, terms=c("Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(OEF_P_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(OEF_P_Invasive.lm.summary$coefficients[4,4],2)))
ggplot() + geom_point(data = alldata, aes(x = Invasive, y = OEF_P))  +
  geom_smooth(data=alldata, aes(x = Invasive, y = OEF_P), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=OEF_P_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=OEF_P_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=OEF_P_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=OEF_P_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "OEF (%)", x = "Category 1 (Days)")+
  annotate(geom="text", x=5, y=45, label=paste("Adj R Sq = ", round(OEF_P_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()
```

```{r, echo=FALSE, message=F, warning=F}
OEF_P_Noninvasive.lm <- lm(OEF_P ~ PMA + GA + Noninvasive , data=alldata)
OEF_P_Noninvasive.lm.summary <- summary(OEF_P_Noninvasive.lm)
OEF_P_Noninvasive.predict <- ggpredict(OEF_P_Noninvasive.lm, terms=c("Noninvasive"), ci.lvl=0.95)
pvalue <- ifelse(round(OEF_P_Noninvasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(OEF_P_Noninvasive.lm.summary$coefficients[4,4],2)))
ggplot() + geom_point(data = alldata, aes(x = Noninvasive, y = OEF_P))  +
  geom_smooth(data=alldata, aes(x = Noninvasive, y = OEF_P), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=OEF_P_Noninvasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=OEF_P_Noninvasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=OEF_P_Noninvasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=OEF_P_Noninvasive.predict, aes(x,predicted), color="blue")+
  labs(y= "OEF (%)", x = "Category 2 (Days)")+
  annotate(geom="text", x=14, y=45, label=paste("Adj R Sq = ", round(OEF_P_Noninvasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()
```

```{r, echo=FALSE, message=F, warning=F}
OEF_P_Less_Invasive.lm <- lm(OEF_P ~ PMA + GA + Less_Invasive , data=alldata)
OEF_P_Less_Invasive.lm.summary <- summary(OEF_P_Less_Invasive.lm)
OEF_P_Less_Invasive.predict <- ggpredict(OEF_P_Less_Invasive.lm, terms=c("Less_Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(OEF_P_Less_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(OEF_P_Less_Invasive.lm.summary$coefficients[4,4],2)))
ggplot() + geom_point(data = alldata, aes(x = Less_Invasive, y = OEF_P))  +
  geom_smooth(data=alldata, aes(x = Less_Invasive, y = OEF_P), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=OEF_P_Less_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=OEF_P_Less_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=OEF_P_Less_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=OEF_P_Less_Invasive.predict, aes(x,predicted), color="blue")+
  labs(y= "OEF (%)", x = "Category 3 (Days)")+
  annotate(geom="text", x=5, y=43, label=paste("Adj R Sq = ", round(OEF_P_Less_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()
```

```{r, echo=FALSE, message=F, warning=F}
OEF_P_Vent_P.lm <- lm(OEF_P ~ PMA + GA + Vent_P , data=alldata)
OEF_P_Vent_P.lm.summary <- summary(OEF_P_Vent_P.lm)
OEF_P_Vent_P.predict <- ggpredict(OEF_P_Vent_P.lm, terms=c("Vent_P"), ci.lvl=0.95)
pvalue <- ifelse(round(OEF_P_Vent_P.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(OEF_P_Vent_P.lm.summary$coefficients[4,4],2)))
ggplot() + geom_point(data = alldata, aes(x = Vent_P, y = OEF_P))  +
  geom_smooth(data=alldata, aes(x = Vent_P, y = OEF_P), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=OEF_P_Vent_P.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=OEF_P_Vent_P.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=OEF_P_Vent_P.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=OEF_P_Vent_P.predict, aes(x,predicted), color="blue")+
  labs(y= "OEF (%)", x = "Proportion of Time on All Categories")+
  annotate(geom="text", x=0.35, y=45, label=paste("Adj R Sq = ", round(OEF_P_Vent_P.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()
```

```{r, echo=FALSE, message=F, warning=F}
OEF_P_roomair.lm <- lm(OEF_P ~ PMA + GA + roomair , data=alldata)
OEF_P_roomair.lm.summary <- summary(OEF_P_roomair.lm)
OEF_P_roomair.predict <- ggpredict(OEF_P_roomair.lm, terms=c("roomair"), ci.lvl=0.95)
pvalue <- ifelse(round(OEF_P_roomair.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(OEF_P_roomair.lm.summary$coefficients[4,4],2)))
ggplot() + geom_point(data = alldata, aes(x = roomair, y = OEF_P))  +
  geom_smooth(data=alldata, aes(x = roomair, y = OEF_P), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=OEF_P_roomair.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=OEF_P_roomair.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=OEF_P_roomair.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=OEF_P_roomair.predict, aes(x,predicted), color="blue")+
  labs(y= "OEF (%)", x = "Room Air (Days)")+
  annotate(geom="text", x=7, y=45, label=paste("Adj R Sq = ", round(OEF_P_roomair.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()
```

# Volume ~ Invasive

## Brain Stem

```{r, echo=FALSE, message=F, warning=F}
Volume_Invasive.lm <- lm(Brain_Stem_Volume ~ PMA + GA + Invasive , data=alldata)
Volume_Invasive.lm.summary <- summary(Volume_Invasive.lm)
Volume_Invasive.predict <- ggpredict(Volume_Invasive.lm, terms=c("Invasive"), ci.lvl=0.95)
pvalue <- ifelse(round(Volume_Invasive.lm.summary$coefficients[4,4], 4) < 0.01, "p < 0.01", paste("p = ", round(Volume_Invasive.lm.summary$coefficients[4,4],2)))
ggplot() + geom_point(data = alldata, aes(x = Invasive, y = Brain_Stem_Volume))  +
  geom_smooth(data=alldata, aes(x = Invasive, y = Brain_Stem_Volume), method="lm", colour="grey", size=0.5, alpha=0.3) +
  geom_ribbon(data=Volume_Invasive.predict, aes(x=x, ymin=conf.low, ymax=conf.high), color="blue", alpha=0.15) +
  geom_line(data=Volume_Invasive.predict, aes(x=x, y=conf.high), color="blue", linetype="dashed")+
  geom_line(data=Volume_Invasive.predict, aes(x=x, y=conf.low), color="blue", linetype="dashed")+
  geom_line(data=Volume_Invasive.predict, aes(x,predicted), color="blue")+
  annotate(geom="text", x=10, y=8, label=paste("Adj R Sq = ", round(Volume_Invasive.lm.summary$adj.r.squared,2), "\n", pvalue))+
theme_minimalism()
```

# Tables

## CBF

| ROI | Category 1 |
| --- | --- |
| CGM | `r round(GMCBF_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(GMCBF_Invasive.lm)[4,1],2)` to `r round(confint(GMCBF_Invasive.lm)[4,2],2)`] / `r round(GMCBF_Invasive.lm.summary$adj.r.squared,2)` |
| WM | `r round(WMCBF_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(WMCBF_Invasive.lm)[4,1],2)` to `r round(confint(WMCBF_Invasive.lm)[4,2],2)`] / `r round(WMCBF_Invasive.lm.summary$adj.r.squared,2)` |
| DeepGM | `r round(DeepGMCBF_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(DeepGMCBF_Invasive.lm)[4,1],2)` to `r round(confint(DeepGMCBF_Invasive.lm)[4,2],2)`] / `r round(DeepGMCBF_Invasive.lm.summary$adj.r.squared,2)` |
| Cerebellum | `r round(CerebellumCBF_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(CerebellumCBF_Invasive.lm)[4,1],2)` to `r round(confint(CerebellumCBF_Invasive.lm)[4,2],2)`] / `r round(CerebellumCBF_Invasive.lm.summary$adj.r.squared,2)` |
| Brainstem | `r round(BrainstemCBF_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(BrainstemCBF_Invasive.lm)[4,1],2)` to `r round(confint(BrainstemCBF_Invasive.lm)[4,2],2)`] / `r round(BrainstemCBF_Invasive.lm.summary$adj.r.squared,2)` |
| Hipandamyg | `r round(HipandamygCBF_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(HipandamygCBF_Invasive.lm)[4,1],2)` to `r round(confint(HipandamygCBF_Invasive.lm)[4,2],2)`] / `r round(HipandamygCBF_Invasive.lm.summary$adj.r.squared,2)` |

| ROI | Category 2 |
| --- | --- |
| CGM | `r round(GMCBF_Noninvasive.lm.summary$coefficients[4,1],2)` [`r round(confint(GMCBF_Noninvasive.lm)[4,1],2)` to `r round(confint(GMCBF_Noninvasive.lm)[4,2],2)`] / `r round(GMCBF_Noninvasive.lm.summary$adj.r.squared,2)` |
| WM | `r round(WMCBF_Noninvasive.lm.summary$coefficients[4,1],2)` [`r round(confint(WMCBF_Noninvasive.lm)[4,1],2)` to `r round(confint(WMCBF_Noninvasive.lm)[4,2],2)`] / `r round(WMCBF_Noninvasive.lm.summary$adj.r.squared,2)` |
| DeepGM | `r round(DeepGMCBF_Noninvasive.lm.summary$coefficients[4,1],2)` [`r round(confint(DeepGMCBF_Noninvasive.lm)[4,1],2)` to `r round(confint(DeepGMCBF_Noninvasive.lm)[4,2],2)`] / `r round(DeepGMCBF_Noninvasive.lm.summary$adj.r.squared,2)` |
| Cerebellum | `r round(CerebellumCBF_Noninvasive.lm.summary$coefficients[4,1],2)` [`r round(confint(CerebellumCBF_Noninvasive.lm)[4,1],2)` to `r round(confint(CerebellumCBF_Noninvasive.lm)[4,2],2)`] / `r round(CerebellumCBF_Noninvasive.lm.summary$adj.r.squared,2)` |
| Brainstem | `r round(BrainstemCBF_Noninvasive.lm.summary$coefficients[4,1],2)` [`r round(confint(BrainstemCBF_Noninvasive.lm)[4,1],2)` to `r round(confint(BrainstemCBF_Noninvasive.lm)[4,2],2)`] / `r round(BrainstemCBF_Noninvasive.lm.summary$adj.r.squared,2)` |
| Hipandamyg | `r round(HipandamygCBF_Noninvasive.lm.summary$coefficients[4,1],2)` [`r round(confint(HipandamygCBF_Noninvasive.lm)[4,1],2)` to `r round(confint(HipandamygCBF_Noninvasive.lm)[4,2],2)`] / `r round(HipandamygCBF_Noninvasive.lm.summary$adj.r.squared,2)` |

| ROI | Category 3 |
| --- | --- |
| CGM | `r round(GMCBF_Less_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(GMCBF_Less_Invasive.lm)[4,1],2)` to `r round(confint(GMCBF_Less_Invasive.lm)[4,2],2)`] / `r round(GMCBF_Less_Invasive.lm.summary$adj.r.squared,2)` |
| WM | `r round(WMCBF_Less_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(WMCBF_Less_Invasive.lm)[4,1],2)` to `r round(confint(WMCBF_Less_Invasive.lm)[4,2],2)`] / `r round(WMCBF_Less_Invasive.lm.summary$adj.r.squared,2)` |
| DeepGM | `r round(DeepGMCBF_Less_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(DeepGMCBF_Less_Invasive.lm)[4,1],2)` to `r round(confint(DeepGMCBF_Less_Invasive.lm)[4,2],2)`] / `r round(DeepGMCBF_Less_Invasive.lm.summary$adj.r.squared,2)` |
| Cerebellum | `r round(CerebellumCBF_Less_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(CerebellumCBF_Less_Invasive.lm)[4,1],2)` to `r round(confint(CerebellumCBF_Less_Invasive.lm)[4,2],2)`] / `r round(CerebellumCBF_Less_Invasive.lm.summary$adj.r.squared,2)` |
| Brainstem | `r round(BrainstemCBF_Less_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(BrainstemCBF_Less_Invasive.lm)[4,1],2)` to `r round(confint(BrainstemCBF_Less_Invasive.lm)[4,2],2)`] / `r round(BrainstemCBF_Less_Invasive.lm.summary$adj.r.squared,2)` |
| Hipandamyg | `r round(HipandamygCBF_Less_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(HipandamygCBF_Less_Invasive.lm)[4,1],2)` to `r round(confint(HipandamygCBF_Less_Invasive.lm)[4,2],2)`] / `r round(HipandamygCBF_Less_Invasive.lm.summary$adj.r.squared,2)` |

| ROI | Proportion of Days on All Categories |
| --- | --- |
| CGM | `r round(GMCBF_Vent_P.lm.summary$coefficients[4,1],2)` [`r round(confint(GMCBF_Vent_P.lm)[4,1],2)` to `r round(confint(GMCBF_Vent_P.lm)[4,2],2)`] / `r round(GMCBF_Vent_P.lm.summary$adj.r.squared,2)` |
| WM | `r round(WMCBF_Vent_P.lm.summary$coefficients[4,1],2)` [`r round(confint(WMCBF_Vent_P.lm)[4,1],2)` to `r round(confint(WMCBF_Vent_P.lm)[4,2],2)`] / `r round(WMCBF_Vent_P.lm.summary$adj.r.squared,2)` |
| DeepGM | `r round(DeepGMCBF_Vent_P.lm.summary$coefficients[4,1],2)` [`r round(confint(DeepGMCBF_Vent_P.lm)[4,1],2)` to `r round(confint(DeepGMCBF_Vent_P.lm)[4,2],2)`] / `r round(DeepGMCBF_Vent_P.lm.summary$adj.r.squared,2)` |
| Cerebellum | `r round(CerebellumCBF_Vent_P.lm.summary$coefficients[4,1],2)` [`r round(confint(CerebellumCBF_Vent_P.lm)[4,1],2)` to `r round(confint(CerebellumCBF_Vent_P.lm)[4,2],2)`] / `r round(CerebellumCBF_Vent_P.lm.summary$adj.r.squared,2)` |
| Brainstem | `r round(BrainstemCBF_Vent_P.lm.summary$coefficients[4,1],2)` [`r round(confint(BrainstemCBF_Vent_P.lm)[4,1],2)` to `r round(confint(BrainstemCBF_Vent_P.lm)[4,2],2)`] / `r round(BrainstemCBF_Vent_P.lm.summary$adj.r.squared,2)` |
| Hipandamyg | `r round(HipandamygCBF_Vent_P.lm.summary$coefficients[4,1],2)` [`r round(confint(HipandamygCBF_Vent_P.lm)[4,1],2)` to `r round(confint(HipandamygCBF_Vent_P.lm)[4,2],2)`] / `r round(HipandamygCBF_Vent_P.lm.summary$adj.r.squared,2)` |

| ROI | Room Air |
| --- | --- |
| CGM | `r round(GMCBF_roomair.lm.summary$coefficients[4,1],2)` [`r round(confint(GMCBF_roomair.lm)[4,1],2)` to `r round(confint(GMCBF_roomair.lm)[4,2],2)`] / `r round(GMCBF_roomair.lm.summary$adj.r.squared,2)` |
| WM | `r round(WMCBF_roomair.lm.summary$coefficients[4,1],2)` [`r round(confint(WMCBF_roomair.lm)[4,1],2)` to `r round(confint(WMCBF_roomair.lm)[4,2],2)`] / `r round(WMCBF_roomair.lm.summary$adj.r.squared,2)` |
| DeepGM | `r round(DeepGMCBF_roomair.lm.summary$coefficients[4,1],2)` [`r round(confint(DeepGMCBF_roomair.lm)[4,1],2)` to `r round(confint(DeepGMCBF_roomair.lm)[4,2],2)`] / `r round(DeepGMCBF_roomair.lm.summary$adj.r.squared,2)` |
| Cerebellum | `r round(CerebellumCBF_roomair.lm.summary$coefficients[4,1],2)` [`r round(confint(CerebellumCBF_roomair.lm)[4,1],2)` to `r round(confint(CerebellumCBF_roomair.lm)[4,2],2)`] / `r round(CerebellumCBF_roomair.lm.summary$adj.r.squared,2)` |
| Brainstem | `r round(BrainstemCBF_roomair.lm.summary$coefficients[4,1],2)` [`r round(confint(BrainstemCBF_roomair.lm)[4,1],2)` to `r round(confint(BrainstemCBF_roomair.lm)[4,2],2)`] / `r round(BrainstemCBF_roomair.lm.summary$adj.r.squared,2)` |
| Hipandamyg | `r round(HipandamygCBF_roomair.lm.summary$coefficients[4,1],2)` [`r round(confint(HipandamygCBF_roomair.lm)[4,1],2)` to `r round(confint(HipandamygCBF_roomair.lm)[4,2],2)`] / `r round(HipandamygCBF_roomair.lm.summary$adj.r.squared,2)` |

## CMRO2

| ROI | Category 1 |
| --- | --- |
| CGM | `r round(GMCMRO2_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(GMCMRO2_Invasive.lm)[4,1],2)` to `r round(confint(GMCMRO2_Invasive.lm)[4,2],2)`] / `r round(GMCMRO2_Invasive.lm.summary$adj.r.squared,2)` |
| WM | `r round(WMCMRO2_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(WMCMRO2_Invasive.lm)[4,1],2)` to `r round(confint(WMCMRO2_Invasive.lm)[4,2],2)`] / `r round(WMCMRO2_Invasive.lm.summary$adj.r.squared,2)` |
| DeepGM | `r round(DeepGMCMRO2_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(DeepGMCMRO2_Invasive.lm)[4,1],2)` to `r round(confint(DeepGMCMRO2_Invasive.lm)[4,2],2)`] / `r round(DeepGMCMRO2_Invasive.lm.summary$adj.r.squared,2)` |
| Cerebellum | `r round(CerebellumCMRO2_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(CerebellumCMRO2_Invasive.lm)[4,1],2)` to `r round(confint(CerebellumCMRO2_Invasive.lm)[4,2],2)`] / `r round(CerebellumCMRO2_Invasive.lm.summary$adj.r.squared,2)` |
| Brainstem | `r round(BrainstemCMRO2_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(BrainstemCMRO2_Invasive.lm)[4,1],2)` to `r round(confint(BrainstemCMRO2_Invasive.lm)[4,2],2)`] / `r round(BrainstemCMRO2_Invasive.lm.summary$adj.r.squared,2)` |
| Hipandamyg | `r round(HipandamygCMRO2_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(HipandamygCMRO2_Invasive.lm)[4,1],2)` to `r round(confint(HipandamygCMRO2_Invasive.lm)[4,2],2)`] / `r round(HipandamygCMRO2_Invasive.lm.summary$adj.r.squared,2)` |

| ROI | Category 2 |
| --- | --- |
| CGM | `r round(GMCMRO2_Noninvasive.lm.summary$coefficients[4,1],2)` [`r round(confint(GMCMRO2_Noninvasive.lm)[4,1],2)` to `r round(confint(GMCMRO2_Noninvasive.lm)[4,2],2)`] / `r round(GMCMRO2_Noninvasive.lm.summary$adj.r.squared,2)` |
| WM | `r round(WMCMRO2_Noninvasive.lm.summary$coefficients[4,1],2)` [`r round(confint(WMCMRO2_Noninvasive.lm)[4,1],2)` to `r round(confint(WMCMRO2_Noninvasive.lm)[4,2],2)`] / `r round(WMCMRO2_Noninvasive.lm.summary$adj.r.squared,2)` |
| DeepGM | `r round(DeepGMCMRO2_Noninvasive.lm.summary$coefficients[4,1],2)` [`r round(confint(DeepGMCMRO2_Noninvasive.lm)[4,1],2)` to `r round(confint(DeepGMCMRO2_Noninvasive.lm)[4,2],2)`] / `r round(DeepGMCMRO2_Noninvasive.lm.summary$adj.r.squared,2)` |
| Cerebellum | `r round(CerebellumCMRO2_Noninvasive.lm.summary$coefficients[4,1],2)` [`r round(confint(CerebellumCMRO2_Noninvasive.lm)[4,1],2)` to `r round(confint(CerebellumCMRO2_Noninvasive.lm)[4,2],2)`] / `r round(CerebellumCMRO2_Noninvasive.lm.summary$adj.r.squared,2)` |
| Brainstem | `r round(BrainstemCMRO2_Noninvasive.lm.summary$coefficients[4,1],2)` [`r round(confint(BrainstemCMRO2_Noninvasive.lm)[4,1],2)` to `r round(confint(BrainstemCMRO2_Noninvasive.lm)[4,2],2)`] / `r round(BrainstemCMRO2_Noninvasive.lm.summary$adj.r.squared,2)` |
| Hipandamyg | `r round(HipandamygCMRO2_Noninvasive.lm.summary$coefficients[4,1],2)` [`r round(confint(HipandamygCMRO2_Noninvasive.lm)[4,1],2)` to `r round(confint(HipandamygCMRO2_Noninvasive.lm)[4,2],2)`] / `r round(HipandamygCMRO2_Noninvasive.lm.summary$adj.r.squared,2)` |

| ROI | Category 3 |
| --- | --- |
| CGM | `r round(GMCMRO2_Less_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(GMCMRO2_Less_Invasive.lm)[4,1],2)` to `r round(confint(GMCMRO2_Less_Invasive.lm)[4,2],2)`] / `r round(GMCMRO2_Less_Invasive.lm.summary$adj.r.squared,2)` |
| WM | `r round(WMCMRO2_Less_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(WMCMRO2_Less_Invasive.lm)[4,1],2)` to `r round(confint(WMCMRO2_Less_Invasive.lm)[4,2],2)`] / `r round(WMCMRO2_Less_Invasive.lm.summary$adj.r.squared,2)` |
| DeepGM | `r round(DeepGMCMRO2_Less_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(DeepGMCMRO2_Less_Invasive.lm)[4,1],2)` to `r round(confint(DeepGMCMRO2_Less_Invasive.lm)[4,2],2)`] / `r round(DeepGMCMRO2_Less_Invasive.lm.summary$adj.r.squared,2)` |
| Cerebellum | `r round(CerebellumCMRO2_Less_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(CerebellumCMRO2_Less_Invasive.lm)[4,1],2)` to `r round(confint(CerebellumCMRO2_Less_Invasive.lm)[4,2],2)`] / `r round(CerebellumCMRO2_Less_Invasive.lm.summary$adj.r.squared,2)` |
| Brainstem | `r round(BrainstemCMRO2_Less_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(BrainstemCMRO2_Less_Invasive.lm)[4,1],2)` to `r round(confint(BrainstemCMRO2_Less_Invasive.lm)[4,2],2)`] / `r round(BrainstemCMRO2_Less_Invasive.lm.summary$adj.r.squared,2)` |
| Hipandamyg | `r round(HipandamygCMRO2_Less_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(HipandamygCMRO2_Less_Invasive.lm)[4,1],2)` to `r round(confint(HipandamygCMRO2_Less_Invasive.lm)[4,2],2)`] / `r round(HipandamygCMRO2_Less_Invasive.lm.summary$adj.r.squared,2)` |

| ROI | Proportion of Days on All Categories |
| --- | --- |
| CGM | `r round(GMCMRO2_Vent_P.lm.summary$coefficients[4,1],2)` [`r round(confint(GMCMRO2_Vent_P.lm)[4,1],2)` to `r round(confint(GMCMRO2_Vent_P.lm)[4,2],2)`] / `r round(GMCMRO2_Vent_P.lm.summary$adj.r.squared,2)` |
| WM | `r round(WMCMRO2_Vent_P.lm.summary$coefficients[4,1],2)` [`r round(confint(WMCMRO2_Vent_P.lm)[4,1],2)` to `r round(confint(WMCMRO2_Vent_P.lm)[4,2],2)`] / `r round(WMCMRO2_Vent_P.lm.summary$adj.r.squared,2)` |
| DeepGM | `r round(DeepGMCMRO2_Vent_P.lm.summary$coefficients[4,1],2)` [`r round(confint(DeepGMCMRO2_Vent_P.lm)[4,1],2)` to `r round(confint(DeepGMCMRO2_Vent_P.lm)[4,2],2)`] / `r round(DeepGMCMRO2_Vent_P.lm.summary$adj.r.squared,2)` |
| Cerebellum | `r round(CerebellumCMRO2_Vent_P.lm.summary$coefficients[4,1],2)` [`r round(confint(CerebellumCMRO2_Vent_P.lm)[4,1],2)` to `r round(confint(CerebellumCMRO2_Vent_P.lm)[4,2],2)`] / `r round(CerebellumCMRO2_Vent_P.lm.summary$adj.r.squared,2)` |
| Brainstem | `r round(BrainstemCMRO2_Vent_P.lm.summary$coefficients[4,1],2)` [`r round(confint(BrainstemCMRO2_Vent_P.lm)[4,1],2)` to `r round(confint(BrainstemCMRO2_Vent_P.lm)[4,2],2)`] / `r round(BrainstemCMRO2_Vent_P.lm.summary$adj.r.squared,2)` |
| Hipandamyg | `r round(HipandamygCMRO2_Vent_P.lm.summary$coefficients[4,1],2)` [`r round(confint(HipandamygCMRO2_Vent_P.lm)[4,1],2)` to `r round(confint(HipandamygCMRO2_Vent_P.lm)[4,2],2)`] / `r round(HipandamygCMRO2_Vent_P.lm.summary$adj.r.squared,2)` |

| ROI | Room Air |
| --- | --- |
| CGM | `r round(GMCMRO2_roomair.lm.summary$coefficients[4,1],2)` [`r round(confint(GMCMRO2_roomair.lm)[4,1],2)` to `r round(confint(GMCMRO2_roomair.lm)[4,2],2)`] / `r round(GMCMRO2_roomair.lm.summary$adj.r.squared,2)` |
| WM | `r round(WMCMRO2_roomair.lm.summary$coefficients[4,1],2)` [`r round(confint(WMCMRO2_roomair.lm)[4,1],2)` to `r round(confint(WMCMRO2_roomair.lm)[4,2],2)`] / `r round(WMCMRO2_roomair.lm.summary$adj.r.squared,2)` |
| DeepGM | `r round(DeepGMCMRO2_roomair.lm.summary$coefficients[4,1],2)` [`r round(confint(DeepGMCMRO2_roomair.lm)[4,1],2)` to `r round(confint(DeepGMCMRO2_roomair.lm)[4,2],2)`] / `r round(DeepGMCMRO2_roomair.lm.summary$adj.r.squared,2)` |
| Cerebellum | `r round(CerebellumCMRO2_roomair.lm.summary$coefficients[4,1],2)` [`r round(confint(CerebellumCMRO2_roomair.lm)[4,1],2)` to `r round(confint(CerebellumCMRO2_roomair.lm)[4,2],2)`] / `r round(CerebellumCMRO2_roomair.lm.summary$adj.r.squared,2)` |
| Brainstem | `r round(BrainstemCMRO2_roomair.lm.summary$coefficients[4,1],2)` [`r round(confint(BrainstemCMRO2_roomair.lm)[4,1],2)` to `r round(confint(BrainstemCMRO2_roomair.lm)[4,2],2)`] / `r round(BrainstemCMRO2_roomair.lm.summary$adj.r.squared,2)` |
| Hipandamyg | `r round(HipandamygCMRO2_roomair.lm.summary$coefficients[4,1],2)` [`r round(confint(HipandamygCMRO2_roomair.lm)[4,1],2)` to `r round(confint(HipandamygCMRO2_roomair.lm)[4,2],2)`] / `r round(HipandamygCMRO2_roomair.lm.summary$adj.r.squared,2)` |

# CSVO2

| ROI | Category 1 | Category 2 | Category 3 | Proportion of Days on All Categories | Room Air |
| --- | --- | --- | --- | --- | --- |
| Wholebrain | `r round(CSvO2_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(CSvO2_Invasive.lm)[4,1],2)` to `r round(confint(CSvO2_Invasive.lm)[4,2],2)`] / `r round(CSvO2_Invasive.lm.summary$adj.r.squared,2)` | `r round(CSvO2_Noninvasive.lm.summary$coefficients[4,1],2)` [`r round(confint(CSvO2_Noninvasive.lm)[4,1],2)` to `r round(confint(CSvO2_Noninvasive.lm)[4,2],2)`] / `r round(CSvO2_Noninvasive.lm.summary$adj.r.squared,2)` | `r round(CSvO2_Less_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(CSvO2_Less_Invasive.lm)[4,1],2)` to `r round(confint(CSvO2_Less_Invasive.lm)[4,2],2)`] / `r round(CSvO2_Less_Invasive.lm.summary$adj.r.squared,2)` | `r round(CSvO2_Vent_P.lm.summary$coefficients[4,1],2)` [`r round(confint(CSvO2_Vent_P.lm)[4,1],2)` to `r round(confint(CSvO2_Vent_P.lm)[4,2],2)`] / `r round(CSvO2_Vent_P.lm.summary$adj.r.squared,2)` | `r round(CSvO2_roomair.lm.summary$coefficients[4,1],2)` [`r round(confint(CSvO2_roomair.lm)[4,1],2)` to `r round(confint(CSvO2_roomair.lm)[4,2],2)`] / `r round(CSvO2_roomair.lm.summary$adj.r.squared,2)` |

# CSaO2

| ROI | Category 1 | Category 2 | Category 3 | Proportion of Days on All Categories | Room Air |
| --- | --- | --- | --- | --- | --- |
| Wholebrain | `r round(CSaO2_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(CSaO2_Invasive.lm)[4,1],2)` to `r round(confint(CSaO2_Invasive.lm)[4,2],2)`] / `r round(CSaO2_Invasive.lm.summary$adj.r.squared,2)` | `r round(CSaO2_Noninvasive.lm.summary$coefficients[4,1],2)` [`r round(confint(CSaO2_Noninvasive.lm)[4,1],2)` to `r round(confint(CSaO2_Noninvasive.lm)[4,2],2)`] / `r round(CSaO2_Noninvasive.lm.summary$adj.r.squared,2)` | `r round(CSaO2_LI.lm.summary$coefficients[4,1],2)` [`r round(confint(CSaO2_LI.lm)[4,1],2)` to `r round(confint(CSaO2_LI.lm)[4,2],2)`] / `r round(CSaO2_LI.lm.summary$adj.r.squared,2)` | `r round(CSaO2_Vent_P.lm.summary$coefficients[4,1],2)` [`r round(confint(CSaO2_Vent_P.lm)[4,1],2)` to `r round(confint(CSaO2_Vent_P.lm)[4,2],2)`] / `r round(CSaO2_Vent_P.lm.summary$adj.r.squared,2)` | `r round(CSaO2_roomair.lm.summary$coefficients[4,1],2)` [`r round(confint(CSaO2_roomair.lm)[4,1],2)` to `r round(confint(CSaO2_roomair.lm)[4,2],2)`] / `r round(CSaO2_roomair.lm.summary$adj.r.squared,2)` |

# OEF

| ROI | Category 1 | Category 2 | Category 3 | Proportion of Days on All Categories | Room Air |
| --- | --- | --- | --- | --- | --- |
| Wholebrain | `r round(OEF_P_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(OEF_P_Invasive.lm)[4,1],2)` to `r round(confint(OEF_P_Invasive.lm)[4,2],2)`] / `r round(OEF_P_Invasive.lm.summary$adj.r.squared,2)` | `r round(OEF_P_Noninvasive.lm.summary$coefficients[4,1],2)` [`r round(confint(OEF_P_Noninvasive.lm)[4,1],2)` to `r round(confint(OEF_P_Noninvasive.lm)[4,2],2)`] / `r round(OEF_P_Noninvasive.lm.summary$adj.r.squared,2)` | `r round(OEF_P_Less_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(OEF_P_Less_Invasive.lm)[4,1],2)` to `r round(confint(OEF_P_Less_Invasive.lm)[4,2],2)`] / `r round(OEF_P_Less_Invasive.lm.summary$adj.r.squared,2)` | `r round(OEF_P_Vent_P.lm.summary$coefficients[4,1],2)` [`r round(confint(OEF_P_Vent_P.lm)[4,1],2)` to `r round(confint(OEF_P_Vent_P.lm)[4,2],2)`] / `r round(OEF_P_Vent_P.lm.summary$adj.r.squared,2)` | `r round(OEF_P_roomair.lm.summary$coefficients[4,1],2)` [`r round(confint(OEF_P_roomair.lm)[4,1],2)` to `r round(confint(OEF_P_roomair.lm)[4,2],2)`] / `r round(OEF_P_roomair.lm.summary$adj.r.squared,2)` |

# Hct

| ROI | Category 1 | Category 2 | Category 3 | Proportion of Days on All Categories | Room Air |
| --- | --- | --- | --- | --- | --- |
| Wholebrain | `r round(Hct_P_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(Hct_P_Invasive.lm)[4,1],2)` to `r round(confint(Hct_P_Invasive.lm)[4,2],2)`] / `r round(Hct_P_Invasive.lm.summary$adj.r.squared,2)` | `r round(Hct_P_Noninvasive.lm.summary$coefficients[4,1],2)` [`r round(confint(Hct_P_Noninvasive.lm)[4,1],2)` to `r round(confint(Hct_P_Noninvasive.lm)[4,2],2)`] / `r round(Hct_P_Noninvasive.lm.summary$adj.r.squared,2)` | `r round(Hct_P_Less_Invasive.lm.summary$coefficients[4,1],2)` [`r round(confint(Hct_P_Less_Invasive.lm)[4,1],2)` to `r round(confint(Hct_P_Less_Invasive.lm)[4,2],2)`] / `r round(Hct_P_Less_Invasive.lm.summary$adj.r.squared,2)` | `r round(Hct_P_Vent_P.lm.summary$coefficients[4,1],2)` [`r round(confint(Hct_P_Vent_P.lm)[4,1],2)` to `r round(confint(Hct_P_Vent_P.lm)[4,2],2)`] / `r round(Hct_P_Vent_P.lm.summary$adj.r.squared,2)` | `r round(Hct_P_roomair.lm.summary$coefficients[4,1],2)` [`r round(confint(Hct_P_roomair.lm)[4,1],2)` to `r round(confint(Hct_P_roomair.lm)[4,2],2)`] / `r round(Hct_P_roomair.lm.summary$adj.r.squared,2)` |

```{r}
save.image("results.RData")
```

